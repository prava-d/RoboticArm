(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    340016,       6568]
NotebookOptionsPosition[    338256,       6510]
NotebookOutlinePosition[    338603,       6525]
CellTagsIndexPosition[    338560,       6522]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "THIS", " ", "MATH", " ", "AND", " ", "PHYSICS", " ", "NEEDS", " ", "SOME",
     " ", "RIGID", " ", "BODY", " ", "PHYSICS", " ", "PROBABLY"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"x1", "[", "t_", "]"}], " ", ":=", 
     RowBox[{"r1", "*", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"a1", "[", "t", "]"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "[", "t_", "]"}], ":=", 
     RowBox[{"r1", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"a1", "[", "t", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"r1", "*", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"a1", "[", "t", "]"}], "]"}]}]}], "+", 
      RowBox[{"r2", "*", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"a1", "[", "t", "]"}], "+", 
          RowBox[{"a2", "[", "t", "]"}]}], "]"}]}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"r1", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"a1", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"r2", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"a1", "[", "t", "]"}], "+", 
         RowBox[{"a2", "[", "t", "]"}]}], "]"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7196922528899164`*^9, 3.7196924381052246`*^9}, 
   3.7196924880525227`*^9, {3.7197034073923435`*^9, 3.719703435645043*^9}, {
   3.7197144355003834`*^9, 3.7197144432329626`*^9}, {3.7197194348762274`*^9, 
   3.71971944102057*^9}, {3.7197199086796255`*^9, 3.7197199144079103`*^9}, {
   3.7197202882878084`*^9, 3.7197202922473307`*^9}, {3.7197203251811433`*^9, 
   3.719720334267372*^9}, {3.719720442625287*^9, 3.7197204560200005`*^9}, {
   3.719720524253934*^9, 3.7197205453772817`*^9}, {3.7197931606620984`*^9, 
   3.7197931757730675`*^9}, {3.719793710751316*^9, 3.7197937153142977`*^9}, {
   3.71979450147127*^9, 3.7197945083244586`*^9}, {3.719794603813054*^9, 
   3.7197946097234187`*^9}, {3.719796174594644*^9, 3.719796243588049*^9}, {
   3.719796346924713*^9, 3.7197963490243006`*^9}, {3.7197963908033543`*^9, 
   3.7197964024102097`*^9}, {3.7197965425615597`*^9, 
   3.7197965518984027`*^9}, {3.7197970519374604`*^9, 
   3.7197970899900136`*^9}, {3.71981635812494*^9, 3.7198163962202454`*^9}, {
   3.719820279230062*^9, 3.719820285251068*^9}, {3.7198215803347816`*^9, 
   3.7198215855345736`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x1", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"y1", "'"}], "[", "t", "]"}], "^", "2"}]}], ")"}]}], "+", 
       RowBox[{"m2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], 
      ")"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.719692415945959*^9, 3.7196924568393526`*^9}, {
   3.7197206270211306`*^9, 3.7197206323784575`*^9}, {3.7198162691063056`*^9, 
   3.719816351130364*^9}, {3.7198164040249557`*^9, 3.7198164189496307`*^9}, 
   3.7198210024579124`*^9, {3.719821124859067*^9, 3.719821125959999*^9}, {
   3.719821335161972*^9, 3.7198213407247972`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m1", " ", 
        SuperscriptBox["r1", "2"]}], "+", 
       RowBox[{"m2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r1", "2"], "+", 
          SuperscriptBox["r2", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", "m2", " ", "r2", " ", 
     RowBox[{"(", 
      RowBox[{"r2", "+", 
       RowBox[{"r1", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["a1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["a2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"m2", " ", 
     SuperscriptBox["r2", "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.7196924590230227`*^9, 3.7196944839087095`*^9, 3.7197034390797625`*^9, 
   3.7197144480651855`*^9, 3.7197146146036167`*^9, 3.719719442864477*^9, 
   3.7197199163059573`*^9, 3.7197200409332876`*^9, 3.7197201539215126`*^9, 
   3.7197202950056877`*^9, 3.719720341708208*^9, 3.719720461582833*^9, {
   3.7197206107665997`*^9, 3.7197206329659824`*^9}, 3.7197211302745295`*^9, 
   3.719721292720659*^9, {3.71972137501096*^9, 3.7197213944725127`*^9}, 
   3.719721530932354*^9, {3.719721635978101*^9, 3.719721654576453*^9}, 
   3.719773028399767*^9, 3.7197732488983192`*^9, 3.71979162888743*^9, 
   3.7197931786952496`*^9, 3.719793246983695*^9, {3.7197937074228425`*^9, 
   3.7197937173301353`*^9}, 3.7197945111289225`*^9, 3.7197946140163727`*^9, 
   3.71979706429972*^9, 3.719816423903799*^9, {3.719819266496913*^9, 
   3.7198192710740986`*^9}, 3.719820446154522*^9, {3.7198210043509283`*^9, 
   3.7198210110207357`*^9}, {3.7198211269426174`*^9, 3.7198211340756288`*^9}, 
   3.7198214199152727`*^9, 3.7198215887872176`*^9, 3.71982196789172*^9, 
   3.7198467091560717`*^9, 3.719855536910011*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"k1", ",", " ", "k2", ",", " ", "k3", ",", " ", "k4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ra", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"ra1", ",", " ", "ra2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"friction", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"fr1", ",", " ", "fr2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lang", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d11", ",", " ", "d12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d21", ",", " ", "d22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d31", ",", "d32"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"d41", ",", "d42"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initDef", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"def1", ",", " ", "def2", ",", " ", "def3", ",", " ", "def4"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.719713042914774*^9, 3.719713100901621*^9}, {
   3.719714348547659*^9, 3.7197143690756865`*^9}, {3.719714607618427*^9, 
   3.7197146076714387`*^9}, {3.719715028404788*^9, 3.7197150286373568`*^9}, {
   3.7197160784587154`*^9, 3.7197160804759703`*^9}, {3.719716157621702*^9, 
   3.7197161618144608`*^9}, {3.7197190940921507`*^9, 
   3.7197191293541718`*^9}, {3.719721390023735*^9, 3.7197213902683477`*^9}, {
   3.7197214750190277`*^9, 3.719721475347904*^9}, {3.7197215240220566`*^9, 
   3.7197215262840586`*^9}, 3.719721608830063*^9, {3.719773233698887*^9, 
   3.7197732364943233`*^9}, {3.719773327520111*^9, 3.7197733494855433`*^9}, {
   3.719773404065732*^9, 3.719773410831732*^9}, {3.7197736652447233`*^9, 
   3.7197737218502994`*^9}, {3.719792333709238*^9, 3.719792378791938*^9}, {
   3.7197928714688544`*^9, 3.7197928917210264`*^9}, {3.7197932707049446`*^9, 
   3.719793274064675*^9}, {3.719793658573943*^9, 3.719793670981501*^9}, {
   3.719816976325224*^9, 3.7198169765046663`*^9}, {3.719817016161646*^9, 
   3.719817017694704*^9}, {3.7198192740079093`*^9, 3.719819283367761*^9}, {
   3.7198193329385357`*^9, 3.7198193485290194`*^9}, 3.719819410550852*^9, {
   3.719821815334296*^9, 3.719821817331608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"a1", "[", "t", "]"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"a2", "[", "t", "]"}], ")"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"initDef", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}]}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"a1", "[", "t", "]"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"a2", "[", "t", "]"}], ")"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"initDef", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"a1", "[", "t", "]"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"a2", "[", "t", "]"}], ")"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"initDef", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}]}], "+", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"a1", "[", "t", "]"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Lang", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"a2", "[", "t", "]"}], ")"}], "*", 
          RowBox[{"ra", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"initDef", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7196924725161505`*^9, 3.7196924738912983`*^9}, {
   3.719692796410107*^9, 3.7196927973308506`*^9}, {3.7196928907719593`*^9, 
   3.7196928973369193`*^9}, {3.7196929348410316`*^9, 
   3.7196929951774096`*^9}, {3.7196931096295815`*^9, 
   3.7196931681957493`*^9}, {3.7196932117747993`*^9, 3.719693213321268*^9}, 
   3.7196935704715137`*^9, {3.7196936608321233`*^9, 3.7196936770257473`*^9}, {
   3.719693726466227*^9, 3.7196937377759085`*^9}, {3.719693818407173*^9, 
   3.719693818484883*^9}, {3.719693848814242*^9, 3.71969390162749*^9}, {
   3.7196940770866003`*^9, 3.71969410740908*^9}, {3.719694163206469*^9, 
   3.7196941747992215`*^9}, {3.7196942048102875`*^9, 
   3.7196943608668175`*^9}, {3.719714215709482*^9, 3.71971428556961*^9}, {
   3.7197144075505095`*^9, 3.7197144168581886`*^9}, {3.7197144599908147`*^9, 
   3.7197144760537467`*^9}, {3.719715666834139*^9, 3.7197156718862667`*^9}, 
   3.7197191342221828`*^9, {3.719719279709105*^9, 3.719719423528083*^9}, {
   3.7197199320469294`*^9, 3.719719952655908*^9}, {3.719720054125456*^9, 
   3.7197200634021616`*^9}, {3.7197929160673056`*^9, 3.719792927412249*^9}, {
   3.719793691983714*^9, 3.7197936966873465`*^9}, {3.7198192873313313`*^9, 
   3.719819295376686*^9}, {3.719820289746017*^9, 3.719820295629658*^9}, {
   3.7198204166127987`*^9, 3.719820443520502*^9}, {3.7198215950719566`*^9, 
   3.7198216039936438`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"k1", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"def1", "+", 
        RowBox[{"d11", " ", "ra1", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{"d12", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{"k2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"def2", "+", 
        RowBox[{"d21", " ", "ra1", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{"d22", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{"k3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"def3", "+", 
        RowBox[{"d31", " ", "ra1", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{"d32", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{"k4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"def4", "+", 
        RowBox[{"d41", " ", "ra1", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{"d42", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.719821945414959*^9, 3.719821971689818*^9}, 
   3.7198467091731615`*^9, 3.719855536930067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fr", " ", "=", "  ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"friction", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{
        RowBox[{"a1", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", " ", 
     RowBox[{
      RowBox[{"friction", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{
        RowBox[{"a2", "'"}], "[", "t", "]"}], "^", "2"}]}]}], " ", 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.719816956115199*^9, 3.719817010693033*^9}, {
  3.7198170494172554`*^9, 3.719817050202349*^9}, {3.7198193057723503`*^9, 
  3.719819328342347*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"fr1", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"fr2", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.7198170508972206`*^9, 3.719819357268221*^9, 3.719820451589003*^9, 
   3.719821011055794*^9, 3.7198211341247635`*^9, 3.719821419951366*^9, 
   3.719821606509349*^9, {3.7198219537912273`*^9, 3.719821973001299*^9}, 
   3.719846709182141*^9, 3.719855536941094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"L", " ", "=", " ", 
  RowBox[{"T", "-", "V"}]}], "\[IndentingNewLine]", 
 RowBox[{"H", " ", "=", " ", 
  RowBox[{"T", "+", "V"}]}], "\[IndentingNewLine]", 
 RowBox[{"TotEng", " ", "=", " ", 
  RowBox[{"T", "+", "V", "+", "Fr"}]}]}], "Input",
 CellChangeTimes->{{3.719694432788142*^9, 3.7196944355135717`*^9}, {
  3.7197130207585278`*^9, 3.719713021257744*^9}, {3.7197208391577506`*^9, 
  3.7197208428104897`*^9}, {3.719721122246189*^9, 3.7197211223183813`*^9}, {
  3.719721650177781*^9, 3.7197216509217587`*^9}, {3.7197916352476654`*^9, 
  3.719791635482052*^9}, {3.7198164449728127`*^9, 3.719816447985856*^9}, {
  3.719816951199066*^9, 3.7198169529276943`*^9}, {3.7198594914369135`*^9, 
  3.7198595029213576`*^9}, {3.7198595663445663`*^9, 3.7198595664027185`*^9}, {
  3.7198596005041943`*^9, 3.719859607688215*^9}, {3.7198597618585005`*^9, 
  3.719859795864496*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "k1"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def1", "+", 
         RowBox[{"d11", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d12", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "-", 
     RowBox[{"k2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def2", "+", 
         RowBox[{"d21", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d22", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "-", 
     RowBox[{"k3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def3", "+", 
         RowBox[{"d31", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d32", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "-", 
     RowBox[{"k4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def4", "+", 
         RowBox[{"d41", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d42", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox["r1", "2"]}], "+", 
        RowBox[{"m2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r1", "2"], "+", 
           SuperscriptBox["r2", "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "m2", " ", "r2", " ", 
      RowBox[{"(", 
       RowBox[{"r2", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"m2", " ", 
      SuperscriptBox["r2", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.719694436169154*^9, 3.719694471261612*^9, 3.7196945162831454`*^9, 
   3.7197034474014363`*^9, 3.719703568779158*^9, 3.7197144831787453`*^9, 
   3.7197146185032825`*^9, 3.7197156875653095`*^9, 3.7197160859636126`*^9, 
   3.71971617951299*^9, 3.719716226543651*^9, 3.719719448564635*^9, 
   3.719719479261279*^9, 3.719719958948655*^9, 3.7197200679964437`*^9, 
   3.7197203009665785`*^9, 3.71972035916579*^9, 3.719720492499264*^9, 
   3.7197206493858023`*^9, 3.719720713049508*^9, 3.719720843409087*^9, {
   3.719721123320045*^9, 3.719721130323661*^9}, 3.719721292795859*^9, {
   3.7197213750590878`*^9, 3.719721394527674*^9}, 3.719721481839082*^9, 
   3.719721530982521*^9, {3.719721642342991*^9, 3.7197216546336174`*^9}, 
   3.719773032932826*^9, 3.71979163649762*^9, 3.7197929319283504`*^9, 
   3.7197933366181407`*^9, 3.7197937237058067`*^9, 3.719794517865827*^9, 
   3.719794614047643*^9, 3.7198164483828726`*^9, 3.7198170546031027`*^9, 
   3.719819359205362*^9, 3.719820453031847*^9, 3.719821011069873*^9, 
   3.7198211341458187`*^9, 3.7198214199654026`*^9, 3.7198216086410036`*^9, 
   3.71982197560722*^9, 3.719846709198183*^9, 3.7198555369581437`*^9, 
   3.719859503491872*^9, 3.7198595669070864`*^9, 3.7198596086517735`*^9, 
   3.7198597630715685`*^9, 3.7198597965546813`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"k1", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def1", "+", 
         RowBox[{"d11", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d12", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def2", "+", 
         RowBox[{"d21", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d22", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def3", "+", 
         RowBox[{"d31", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d32", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def4", "+", 
         RowBox[{"d41", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d42", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox["r1", "2"]}], "+", 
        RowBox[{"m2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r1", "2"], "+", 
           SuperscriptBox["r2", "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "m2", " ", "r2", " ", 
      RowBox[{"(", 
       RowBox[{"r2", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"m2", " ", 
      SuperscriptBox["r2", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.719694436169154*^9, 3.719694471261612*^9, 3.7196945162831454`*^9, 
   3.7197034474014363`*^9, 3.719703568779158*^9, 3.7197144831787453`*^9, 
   3.7197146185032825`*^9, 3.7197156875653095`*^9, 3.7197160859636126`*^9, 
   3.71971617951299*^9, 3.719716226543651*^9, 3.719719448564635*^9, 
   3.719719479261279*^9, 3.719719958948655*^9, 3.7197200679964437`*^9, 
   3.7197203009665785`*^9, 3.71972035916579*^9, 3.719720492499264*^9, 
   3.7197206493858023`*^9, 3.719720713049508*^9, 3.719720843409087*^9, {
   3.719721123320045*^9, 3.719721130323661*^9}, 3.719721292795859*^9, {
   3.7197213750590878`*^9, 3.719721394527674*^9}, 3.719721481839082*^9, 
   3.719721530982521*^9, {3.719721642342991*^9, 3.7197216546336174`*^9}, 
   3.719773032932826*^9, 3.71979163649762*^9, 3.7197929319283504`*^9, 
   3.7197933366181407`*^9, 3.7197937237058067`*^9, 3.719794517865827*^9, 
   3.719794614047643*^9, 3.7198164483828726`*^9, 3.7198170546031027`*^9, 
   3.719819359205362*^9, 3.719820453031847*^9, 3.719821011069873*^9, 
   3.7198211341458187`*^9, 3.7198214199654026`*^9, 3.7198216086410036`*^9, 
   3.71982197560722*^9, 3.719846709198183*^9, 3.7198555369581437`*^9, 
   3.719859503491872*^9, 3.7198595669070864`*^9, 3.7198596086517735`*^9, 
   3.7198597630715685`*^9, 3.719859796560683*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"k1", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def1", "+", 
         RowBox[{"d11", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d12", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def2", "+", 
         RowBox[{"d21", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d22", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def3", "+", 
         RowBox[{"d31", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d32", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{"k4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"def4", "+", 
         RowBox[{"d41", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d42", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"fr1", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"fr2", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox["r1", "2"]}], "+", 
        RowBox[{"m2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r1", "2"], "+", 
           SuperscriptBox["r2", "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "m2", " ", "r2", " ", 
      RowBox[{"(", 
       RowBox[{"r2", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"m2", " ", 
      SuperscriptBox["r2", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.719694436169154*^9, 3.719694471261612*^9, 3.7196945162831454`*^9, 
   3.7197034474014363`*^9, 3.719703568779158*^9, 3.7197144831787453`*^9, 
   3.7197146185032825`*^9, 3.7197156875653095`*^9, 3.7197160859636126`*^9, 
   3.71971617951299*^9, 3.719716226543651*^9, 3.719719448564635*^9, 
   3.719719479261279*^9, 3.719719958948655*^9, 3.7197200679964437`*^9, 
   3.7197203009665785`*^9, 3.71972035916579*^9, 3.719720492499264*^9, 
   3.7197206493858023`*^9, 3.719720713049508*^9, 3.719720843409087*^9, {
   3.719721123320045*^9, 3.719721130323661*^9}, 3.719721292795859*^9, {
   3.7197213750590878`*^9, 3.719721394527674*^9}, 3.719721481839082*^9, 
   3.719721530982521*^9, {3.719721642342991*^9, 3.7197216546336174`*^9}, 
   3.719773032932826*^9, 3.71979163649762*^9, 3.7197929319283504`*^9, 
   3.7197933366181407`*^9, 3.7197937237058067`*^9, 3.719794517865827*^9, 
   3.719794614047643*^9, 3.7198164483828726`*^9, 3.7198170546031027`*^9, 
   3.719819359205362*^9, 3.719820453031847*^9, 3.719821011069873*^9, 
   3.7198211341458187`*^9, 3.7198214199654026`*^9, 3.7198216086410036`*^9, 
   3.71982197560722*^9, 3.719846709198183*^9, 3.7198555369581437`*^9, 
   3.719859503491872*^9, 3.7198595669070864`*^9, 3.7198596086517735`*^9, 
   3.7198597630715685`*^9, 3.719859796564689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a1Solve", " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{
        RowBox[{"a1", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"a1", "[", "t", "]"}]}], "]"}], "-", 
    RowBox[{"D", "[", 
     RowBox[{"Fr", ",", 
      RowBox[{
       RowBox[{"a1", "'"}], "[", "t", "]"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a2Solve", " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{
        RowBox[{"a2", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"a2", "[", "t", "]"}]}], "]"}], "-", 
    RowBox[{"D", "[", 
     RowBox[{"Fr", ",", 
      RowBox[{
       RowBox[{"a2", "'"}], "[", "t", "]"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7196948872092257`*^9, 3.7196949087219925`*^9}, {
   3.719702851100071*^9, 3.7197029457789598`*^9}, 3.7197035864947677`*^9, {
   3.7197144908933334`*^9, 3.7197144936753464`*^9}, {3.719719488444707*^9, 
   3.719719491254179*^9}, {3.719793364199173*^9, 3.719793366949462*^9}, {
   3.7197937367540574`*^9, 3.719793738519867*^9}, {3.719817059906253*^9, 
   3.7198170834108534`*^9}, {3.7198171165611954`*^9, 
   3.7198171265869427`*^9}, {3.719822017090525*^9, 3.7198220386147113`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", "m2", " ", "r1", " ", "r2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox["r1", "2"]}], "+", 
        RowBox[{"m2", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r1", "2"], "+", 
           SuperscriptBox["r2", "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", "m2", " ", "r2", " ", 
      RowBox[{"(", 
       RowBox[{"r2", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "d11", " ", "k1", " ", "ra1", " ", 
       RowBox[{"(", 
        RowBox[{"def1", "+", 
         RowBox[{"d11", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d12", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d21", " ", "k2", " ", "ra1", " ", 
       RowBox[{"(", 
        RowBox[{"def2", "+", 
         RowBox[{"d21", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d22", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d31", " ", "k3", " ", "ra1", " ", 
       RowBox[{"(", 
        RowBox[{"def3", "+", 
         RowBox[{"d31", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d32", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d41", " ", "k4", " ", "ra1", " ", 
       RowBox[{"(", 
        RowBox[{"def4", "+", 
         RowBox[{"d41", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d42", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
   RowBox[{"fr1", " ", 
    RowBox[{
     SuperscriptBox["a1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.719702883638281*^9, 3.7197029073519893`*^9}, 
   3.7197029470714417`*^9, 3.7197029776428795`*^9, {3.719703570598682*^9, 
   3.719703587743147*^9}, {3.7197144859672823`*^9, 3.7197144960653353`*^9}, 
   3.719715697953332*^9, 3.719716088167981*^9, 3.71971618548979*^9, 
   3.7197162278301277`*^9, {3.7197194805908923`*^9, 3.719719492282914*^9}, 
   3.7197199624519987`*^9, 3.719720070036851*^9, 3.7197203030431156`*^9, {
   3.7197203513529253`*^9, 3.7197203779638777`*^9}, 3.7197204941406393`*^9, 
   3.7197206550759335`*^9, 3.719720714668825*^9, {3.719720847870982*^9, 
   3.719720853506056*^9}, 3.719721130432949*^9, 3.719721292897126*^9, {
   3.719721375162363*^9, 3.7197213946178613`*^9}, 3.719721488558913*^9, 
   3.7197215310737295`*^9, {3.7197216424633107`*^9, 3.7197216547469053`*^9}, 
   3.7197730362747145`*^9, 3.7197916421231995`*^9, 3.7197933679651947`*^9, {
   3.7197937280812683`*^9, 3.719793738879282*^9}, 3.7197945194781055`*^9, 
   3.7197946142820253`*^9, 3.7198164539326253`*^9, 3.719817089172206*^9, 
   3.7198171294685907`*^9, 3.719819370259746*^9, 3.7198204689733286`*^9, 
   3.719821013253654*^9, 3.719821135686919*^9, 3.719821422068997*^9, 
   3.7198216117161694`*^9, {3.719821979628909*^9, 3.7198219902341013`*^9}, 
   3.719822038926554*^9, 3.7198467092172694`*^9, 3.7198555369773073`*^9, 
   3.7198596104004393`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "m2", " ", "r1", " ", "r2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", "m2", " ", "r2", " ", 
      RowBox[{"(", 
       RowBox[{"r2", "+", 
        RowBox[{"r1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["a1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", "m2", " ", 
      SuperscriptBox["r2", "2"], " ", 
      RowBox[{
       SuperscriptBox["a2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "d12", " ", "k1", " ", "ra2", " ", 
       RowBox[{"(", 
        RowBox[{"def1", "+", 
         RowBox[{"d11", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d12", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d22", " ", "k2", " ", "ra2", " ", 
       RowBox[{"(", 
        RowBox[{"def2", "+", 
         RowBox[{"d21", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d22", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d32", " ", "k3", " ", "ra2", " ", 
       RowBox[{"(", 
        RowBox[{"def3", "+", 
         RowBox[{"d31", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d32", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", "d42", " ", "k4", " ", "ra2", " ", 
       RowBox[{"(", 
        RowBox[{"def4", "+", 
         RowBox[{"d41", " ", "ra1", " ", 
          RowBox[{"a1", "[", "t", "]"}]}], "+", 
         RowBox[{"d42", " ", "ra2", " ", 
          RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
   RowBox[{"fr2", " ", 
    RowBox[{
     SuperscriptBox["a2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "m2", " ", "r1", " ", "r2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["a1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
      RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["a1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["a2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.719702883638281*^9, 3.7197029073519893`*^9}, 
   3.7197029470714417`*^9, 3.7197029776428795`*^9, {3.719703570598682*^9, 
   3.719703587743147*^9}, {3.7197144859672823`*^9, 3.7197144960653353`*^9}, 
   3.719715697953332*^9, 3.719716088167981*^9, 3.71971618548979*^9, 
   3.7197162278301277`*^9, {3.7197194805908923`*^9, 3.719719492282914*^9}, 
   3.7197199624519987`*^9, 3.719720070036851*^9, 3.7197203030431156`*^9, {
   3.7197203513529253`*^9, 3.7197203779638777`*^9}, 3.7197204941406393`*^9, 
   3.7197206550759335`*^9, 3.719720714668825*^9, {3.719720847870982*^9, 
   3.719720853506056*^9}, 3.719721130432949*^9, 3.719721292897126*^9, {
   3.719721375162363*^9, 3.7197213946178613`*^9}, 3.719721488558913*^9, 
   3.7197215310737295`*^9, {3.7197216424633107`*^9, 3.7197216547469053`*^9}, 
   3.7197730362747145`*^9, 3.7197916421231995`*^9, 3.7197933679651947`*^9, {
   3.7197937280812683`*^9, 3.719793738879282*^9}, 3.7197945194781055`*^9, 
   3.7197946142820253`*^9, 3.7198164539326253`*^9, 3.719817089172206*^9, 
   3.7198171294685907`*^9, 3.719819370259746*^9, 3.7198204689733286`*^9, 
   3.719821013253654*^9, 3.719821135686919*^9, 3.719821422068997*^9, 
   3.7198216117161694`*^9, {3.719821979628909*^9, 3.7198219902341013`*^9}, 
   3.719822038926554*^9, 3.7198467092172694`*^9, 3.7198555369773073`*^9, 
   3.719859610406433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1Solve", ",", " ", "a2Solve"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a1", "''"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"a2", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"a2sol", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"TrigReduce", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{"a2Solve", ",", " ", 
         RowBox[{
          RowBox[{"a2", "''"}], "[", "t", "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7197029871371555`*^9, 3.719703028408476*^9}, 
   3.719703597444284*^9, {3.719714499376915*^9, 3.719714501879627*^9}, {
   3.7197194973374033`*^9, 3.7197194992625103`*^9}, {3.7197206577721233`*^9, 
   3.7197206848302965`*^9}, {3.7197731303850613`*^9, 
   3.7197731985604143`*^9}, {3.719793413782522*^9, 3.719793424939948*^9}, {
   3.719793741879634*^9, 3.7197937496929235`*^9}, {3.71979406675237*^9, 
   3.719794070047118*^9}, {3.7198194784764204`*^9, 3.719819482884135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["a1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m2", " ", 
          SuperscriptBox["r2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "d11", " ", "k1", " ", "ra1", " ", 
                RowBox[{"(", 
                 RowBox[{"def1", "+", 
                  RowBox[{"d11", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d12", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d21", " ", "k2", " ", "ra1", " ", 
                RowBox[{"(", 
                 RowBox[{"def2", "+", 
                  RowBox[{"d21", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d22", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d31", " ", "k3", " ", "ra1", " ", 
                RowBox[{"(", 
                 RowBox[{"def3", "+", 
                  RowBox[{"d31", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d32", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d41", " ", "k4", " ", "ra1", " ", 
                RowBox[{"(", 
                 RowBox[{"def4", "+", 
                  RowBox[{"d41", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d42", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"fr1", " ", 
             RowBox[{
              SuperscriptBox["a1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["a1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["a2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"m2", " ", "r1", " ", "r2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["a2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
         "-", 
         RowBox[{"m2", " ", "r2", " ", 
          RowBox[{"(", 
           RowBox[{"r2", "+", 
            RowBox[{"r1", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"a2", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "d12", " ", "k1", " ", "ra2", " ", 
                RowBox[{"(", 
                 RowBox[{"def1", "+", 
                  RowBox[{"d11", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d12", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d22", " ", "k2", " ", "ra2", " ", 
                RowBox[{"(", 
                 RowBox[{"def2", "+", 
                  RowBox[{"d21", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d22", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d32", " ", "k3", " ", "ra2", " ", 
                RowBox[{"(", 
                 RowBox[{"def3", "+", 
                  RowBox[{"d31", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d32", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "d42", " ", "k4", " ", "ra2", " ", 
                RowBox[{"(", 
                 RowBox[{"def4", "+", 
                  RowBox[{"d41", " ", "ra1", " ", 
                   RowBox[{"a1", "[", "t", "]"}]}], "+", 
                  RowBox[{"d42", " ", "ra2", " ", 
                   RowBox[{"a2", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"fr2", " ", 
             RowBox[{
              SuperscriptBox["a2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"m2", " ", "r1", " ", "r2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["a1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["a2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["a1", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
               RowBox[{"2", " ", "m2", " ", "r1", " ", "r2", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["a1", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["a2", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m1", " ", "m2", " ", 
          SuperscriptBox["r1", "2"], " ", 
          SuperscriptBox["r2", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["m2", "2"], " ", 
          SuperscriptBox["r1", "2"], " ", 
          SuperscriptBox["r2", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["m2", "2"], " ", 
          SuperscriptBox["r1", "2"], " ", 
          SuperscriptBox["r2", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"a2", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["a2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"m2", " ", 
        SuperscriptBox["r1", "2"], " ", 
        SuperscriptBox["r2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "m1"}], "-", "m2", "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"a2", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d11", " ", "def1", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1"}], "+", 
        RowBox[{"d21", " ", "def2", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1"}], "+", 
        RowBox[{"d31", " ", "def3", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1"}], "+", 
        RowBox[{"d41", " ", "def4", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1"}], "-", 
        RowBox[{"d12", " ", "def1", " ", "k1", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d22", " ", "def2", " ", "k2", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d32", " ", "def3", " ", "k3", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d42", " ", "def4", " ", "k4", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d12", " ", "def1", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d22", " ", "def2", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d32", " ", "def3", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d42", " ", "def4", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra2"}], "-", 
        RowBox[{"d12", " ", "def1", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra2"}], "-", 
        RowBox[{"d22", " ", "def2", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra2"}], "-", 
        RowBox[{"d32", " ", "def3", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra2"}], "-", 
        RowBox[{"d42", " ", "def4", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra2"}], "+", 
        RowBox[{
         SuperscriptBox["d11", "2"], " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d21", "2"], " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d31", "2"], " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d41", "2"], " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d11", " ", "d12", " ", "k1", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d21", " ", "d22", " ", "k2", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d31", " ", "d32", " ", "k3", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d41", " ", "d42", " ", "k4", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d11", " ", "d12", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d21", " ", "d22", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d31", " ", "d32", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d41", " ", "d42", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d11", " ", "d12", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d21", " ", "d22", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d31", " ", "d32", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "-", 
        RowBox[{"d41", " ", "d42", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}]}], "+", 
        RowBox[{"d11", " ", "d12", " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "+", 
        RowBox[{"d21", " ", "d22", " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "+", 
        RowBox[{"d31", " ", "d32", " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "+", 
        RowBox[{"d41", " ", "d42", " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d12", "2"], " ", "k1", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d22", "2"], " ", "k2", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d32", "2"], " ", "k3", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d42", "2"], " ", "k4", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d12", "2"], " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d22", "2"], " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d32", "2"], " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d42", "2"], " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d12", "2"], " ", "k1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d22", "2"], " ", "k2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d32", "2"], " ", "k3", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["d42", "2"], " ", "k4", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}]}], "+", 
        RowBox[{
        "d11", " ", "def1", " ", "k1", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d21", " ", "def2", " ", "k2", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d31", " ", "def3", " ", "k3", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d41", " ", "def4", " ", "k4", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d12", " ", "def1", " ", "k1", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d22", " ", "def2", " ", "k2", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d32", " ", "def3", " ", "k3", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d42", " ", "def4", " ", "k4", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d11", "2"], " ", "k1", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d21", "2"], " ", "k2", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d31", "2"], " ", "k3", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["d41", "2"], " ", "k4", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra1", "2"], " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d11", " ", "d12", " ", "k1", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d21", " ", "d22", " ", "k2", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d31", " ", "d32", " ", "k3", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
        "2", " ", "d41", " ", "d42", " ", "k4", " ", "m2", " ", "r1", " ", 
         "r2", " ", "ra1", " ", "ra2", " ", 
         RowBox[{"a1", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d11", " ", "d12", " ", "k1", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d21", " ", "d22", " ", "k2", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d31", " ", "d32", " ", "k3", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
        "d41", " ", "d42", " ", "k4", " ", "m2", " ", "r1", " ", "r2", " ", 
         "ra1", " ", "ra2", " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d12", "2"], " ", "k1", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d22", "2"], " ", "k2", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d32", "2"], " ", "k3", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["d42", "2"], " ", "k4", " ", "m2", " ", "r1", " ", 
         "r2", " ", 
         SuperscriptBox["ra2", "2"], " ", 
         RowBox[{"a2", "[", "t", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"fr1", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         RowBox[{
          SuperscriptBox["a1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"fr1", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["a1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"m1", " ", "m2", " ", 
         SuperscriptBox["r1", "3"], " ", "r2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox["r1", "3"], " ", "r2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox["m2", "2"], " ", "r1", " ", 
         SuperscriptBox["r2", "3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["r2", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"fr2", " ", "m1", " ", 
         SuperscriptBox["r1", "2"], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"fr2", " ", "m2", " ", 
         SuperscriptBox["r1", "2"], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"fr2", " ", "m2", " ", 
         SuperscriptBox["r2", "2"], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "fr2", " ", "m2", " ", "r1", " ", "r2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["m2", "2"], " ", "r1", " ", 
         SuperscriptBox["r2", "3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["a1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["r2", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["a1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["a2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["m2", "2"], " ", "r1", " ", 
         SuperscriptBox["r2", "3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox["r1", "2"], " ", 
         SuperscriptBox["r2", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["a2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
       ")"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.719773189862276*^9, 3.719773199149993*^9}, 
   3.7197916565465937`*^9, {3.7197934114228983`*^9, 3.719793425174348*^9}, {
   3.719793731284731*^9, 3.7197937550059805`*^9}, {3.7197943359783087`*^9, 
   3.7197943824909525`*^9}, 3.719794523680277*^9, 3.7197946170283766`*^9, 
   3.719816487114833*^9, 3.7198170958088913`*^9, 3.719817159540727*^9, {
   3.7198194723491306`*^9, 3.719819483710332*^9}, 3.719820475730336*^9, 
   3.7198210147325935`*^9, 3.7198211365602455`*^9, 3.719821422909259*^9, 
   3.7198216142669497`*^9, {3.719821983706749*^9, 3.71982199270868*^9}, 
   3.719822042764743*^9, 3.719846709370677*^9, 3.7198555371363015`*^9, 
   3.719859614746933*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "THIS", " ", "SYSTEM", " ", "ASSUMES", " ", "MASS", " ", "IS", " ", "AT", 
   " ", "TIP", " ", "OF", " ", "FINGER", " ", "OBJECT"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7197033472972927`*^9, 3.719703360482145*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parameters", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m1", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"m2", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"r1", "\[Rule]", 
      RowBox[{"1", "/", "20"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"r2", "\[Rule]", 
      RowBox[{"1", "/", "40"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"k1", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"k2", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"k3", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"k4", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"fr1", "\[Rule]", 
      RowBox[{"1", "/", "50"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"fr2", "\[Rule]", 
      RowBox[{"1", "/", "50"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"ra1", "\[Rule]", 
      RowBox[{"1", "/", "50"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ra2", "\[Rule]", 
      RowBox[{"1", "/", "50"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"d11", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", " ", 
     RowBox[{"d12", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"d21", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"d22", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"d31", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", " ", 
     RowBox[{"d32", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"d41", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"d42", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], " ", "means", " ", "clockwise"}], ",", " ", 
       RowBox[{"1", " ", "means", " ", "counter", " ", "clockwise"}], ",", 
       " ", 
       RowBox[{"0", " ", "means", " ", "no", " ", "effect"}]}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"def1", "\[Rule]", ".05"}], ",", "\[IndentingNewLine]", 
     RowBox[{"def2", "\[Rule]", ".15"}], ",", "\[IndentingNewLine]", 
     RowBox[{"def3", "\[Rule]", ".2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"def4", "\[Rule]", ".02"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soltime", " ", "=", " ", "5"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0Gkw1HEcBvAdqXZsyZGrTZRjUpE1alUY1BrbuCvH2hf/QYdFhE1T5Jhq
0DKTXAmzM1HGbTNLDLlHpJLJlRqp5CqrwQip//N78Z3PPM+L58V3f2CE90Ul
BoPhTB+0fWUX0iWfc5yupYgMRkkKDL7ilwEbHbszYd6oglgX21neR+vHHiea
ybp5/bRRYhVnGLwxcUdBu017Nh9SqU4yuMHkE6sHp5shk/2kE96aNH8DWVO1
xPS695cWaaUPc2Kgl9tiHLzXv0rsFlY8gDnCGuKI+Xg77Gky64NDv+Tbf9O2
8SQs6J7gVbpB+zvlWRm8rFS6BjlBP9ahILN551/aCwvpqrD4cZoGTA520YTf
cg3ZcN/V14bwVFeqJbRITraC88eO8OHNYjfiU6m+ENpLhMRkE18xrDJPIqr0
iVOgWpVfGtk3mq2CRkJeNaSoUDncHd1MLKPaPkHlrhtfYKI04yd0SLJcgIZt
Qq1N/LtjQhveX2adhC8y44nMbws8WFnqwYejiq3e0Lp1iBgfHukPJ5iaAng7
nBcBHWxLiBo2njFQ0z2L6K1WUg+d2NXEsOOKTmjFEXTBHm622j/anQ1e6nDA
OkYXHvpcoAc317iHYdG7PGKNr4gDXfkWVnCYXc+Fa/NnbOBkxaAtTDLRtYPK
T09Q8KBxINFebHMZisyviSCr0ycOcr8XJ0LtBNNUKBEdJbrxZOlwr8HXbNI3
uRbBdpZVCVyKb6mE1GmODOaNpHsw6uccy4N2eEJVZel5KJS2EM9ZRArhkvsQ
Ud765xI8YBoQAleLTCNhgUJCdDnGFsPCrC23oKuTnYhFm9/RFwbtPwiiYI/B
2Wi4NuVzF0qu22XAsY/zjbtoE/PjXkIb5kQ3cV2nF0aWHzdTgwNjxAr/IS6k
nuufgjq5ATOQ79BLNC58tkJybw2RKZh6pE47HWucD3Pigxtgml42MXRjsx36
31PpgMszK/0wSfZ2ABbv0RqGfLb+CPwPz0d7Lg==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"governingEq1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a1", "''"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"a1", "''"}], "[", "t", "]"}], "/.", "sol"}], ")"}]}], "/.", 
    "parameters"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"governingEq2", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a2", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"a2", "''"}], "[", "t", "]"}], " ", "/.", "sol"}], ")"}]}], "/.",
      "parameters"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Don", "'"}], "t", " ", "use", " ", 
        RowBox[{"this", " ", "--"}]}], ">", " ", "Method"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
    "It", " ", "is", " ", "restrictive", " ", "whereas", " ", "not", " ", 
     "setting", " ", "it", " ", "uses", " ", "multiple", " ", "methods", " ", 
     "for", " ", 
     RowBox[{"simplification", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"governingEq1", ",", 
        RowBox[{
         RowBox[{"a1", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"a1", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}]}], 
       "}"}], ",", 
      RowBox[{"a1", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "soltime"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"governingEq1", ",", " ", "governingEq2", ",", 
       RowBox[{
        RowBox[{"a1", "[", "0", "]"}], "\[Equal]", ".01"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"a1", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
       " ", 
       RowBox[{
        RowBox[{"a2", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"a2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a1", "[", "t", "]"}], ",", 
       RowBox[{"a2", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "soltime"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finsol", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"s", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"s", ",", "t"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"s", ",", "t"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"s", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"s", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"s2", " ", "=", "  ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"governingEq1", ",", " ", "governingEq2", ",", 
        RowBox[{
         RowBox[{"a1", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"a1", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"a2", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"a2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
      ",", 
      RowBox[{"a2", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], " ", ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
        "}"}]}]}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.719703760084603*^9, 3.71970377645061*^9}, {
  3.719704299721101*^9, 3.7197043009113607`*^9}, {3.719715710234351*^9, 
  3.71971571362963*^9}, {3.719719525838163*^9, 3.719719528013951*^9}, {
  3.719791856224062*^9, 3.719791899509878*^9}, {3.719793437081853*^9, 
  3.7197934408947544`*^9}, {3.719793772695345*^9, 3.7197937756956606`*^9}, {
  3.7197941421237183`*^9, 3.7197941443897457`*^9}, {3.7198195043722878`*^9, 
  3.7198195108043585`*^9}, {3.7198221539021807`*^9, 3.7198221743886395`*^9}, {
  3.719855723216773*^9, 3.7198557283965435`*^9}, {3.7198557599464135`*^9, 
  3.719855761279958*^9}, {3.719856407638324*^9, 3.7198564171125093`*^9}, {
  3.7198564488067627`*^9, 3.719856454231182*^9}, {3.719856496455428*^9, 
  3.7198565034871197`*^9}, {3.719856549317956*^9, 3.7198565511748886`*^9}, {
  3.7198567689379096`*^9, 3.719856777406387*^9}, {3.7198580884629726`*^9, 
  3.719858096157425*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", "[", "t", "]"}], "/.", "finsol"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"a1", "'"}], "[", "t", "]"}], "/.", "finsol"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"a1", "''"}], "[", "t", "]"}], "/.", "finsol"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Motion of First Digit\>\""}], ",", 
   " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a1[t]\>\"", ",", " ", "\"\<a1'[t]\>\"", ",", " ", 
      "\"\<a1''[t]\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<rads, rads/s, rads/s^2\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a2", "[", "t", "]"}], "/.", "finsol"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"a2", "'"}], "[", "t", "]"}], "/.", "finsol"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"a2", "''"}], "[", "t", "]"}], "/.", "finsol"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Motion of Second Digit\>\""}], ",", 
   " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a1[t]\>\"", ",", " ", "\"\<a1'[t]\>\"", ",", " ", 
      "\"\<a1''[t]\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<rads, rads/s, rads/s^2\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"H", "/.", "parameters"}], "/.", "finsol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Hamiltonian Plot (Non Frictional Energy)\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Energy (J)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"L", "/.", "parameters"}], "/.", "finsol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Lagrange Plot\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Energy(J)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TotEng", "/.", "parameters"}], "/.", "finsol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Total System Energy\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Energy (J)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.719817291948612*^9, 3.7198173113392477`*^9}, {
  3.7198221908765087`*^9, 3.719822209356596*^9}, {3.719859510365101*^9, 
  3.7198595524066067`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/Cs=
          "]]}, Annotation[#, "Charting`Private`Tag$1366680#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{1.0204081632653061`*^-7, 0.00011686563931775611`}, {
          0.0015335896027981336`, 1.040629720767402}, {0.0030670771647799406`,
           1.9188909448591915`}, {0.004279576663173844, 2.502969192093645}}], 
         LineBox[CompressedData["
1:eJw9k3sw1AkAx3f3l0chDikapbzK7SnRdHl9f8kYdOc6cxqaQZnFdIVqUAid
s2FyOo+7uLvOayrJo65211qv3bW4XaesMU7M4nYOt0j24bG7cd0/98dnPn98
/v4ciEsJj6dRKBS/D/xn+gvOwCCHhbzbJ9jWhtvI855e3m91LMj8j1dQWgjy
9KMDM0kX2LCTa3l/HyVIuq154VIvG1zz/N+GWTRyc/Of0cXvOLiT0RmnFVHJ
WnH1tYX9XFRtiZbTqBRSXclymyrmYvKxreHevVsISpTIpRtcnF054XD95CYW
ibWI9pF2LF5xji8s0gNSU/MWkofYl4MzvTwdymoODtQ28/DTk+ivHTVafOoX
5l1U0AHH2rZj4TkbuGvCUN1Sd+BxYfWpxqF1yMYzmq5e7ISr8XkfT9d1eDTc
i2cMdSJXeC/Bo3AN+ekP90X6dIHkKMzmV1YxFsgbO9PQhW/HXlyuYqzCzWr4
e+zqhix15zvmtAbZM7Mhnnnd4K5kVSzEa/C6VU9zXe7G9kId00CjhiW2x5i5
94A3kuVlUqKGj0uFdwGjB2mSZsujHmowzPbvpv7cg4fNMmGdTIUS9RNV5nAP
ErqiQop/VKFtwuu12oiPTossC4soFWYE3U3J/nwwF3wDQ11U2NEYWjSfyoe2
3P762U0lvEpH4+Oe8tH19oj0yIwSMTcvBEzO8ME1jdYvDSlRELuw79weAYyS
svIL+pV4FpSuexUmQF5TmeU7sRJvPqH+GcL80BMjZj8aV4LYVfxSyBNAEdwS
NLSiBF1vU+qnFODwtux5rbUK5+S1SZxDQphNZdsmBKiQK6aHesQKQaWNnhnJ
UKHhOcfl6Q9C7NhwGNS3qyCtDCCcB4XIbA15UG6ghi73j6lfab2gSm12klFq
OCVGduw52QtuCedWHUuNsDB5ZVlKL4Sl8rkv7TS4cTw5zfRRLwqkdIPpOxqI
iXx3ipUIQQ4KdlfaKtSKnSaZISIEcifcrNdWYS+tmlPlisBvSf8iImcNV2ta
a+YWRVD4661yf1mHjd+E5au+PhR637dPNdaBdEpYDn7fh4Msm5uBjTpcMlmR
CDz78TERWd//uR4d44ZMdk0/bjj3H1bef4+49GNrDzIHsJXxZt3WhkIWR3eO
7H4+AMamnW9KIoVkBQY/K50bwF2hu9MSh0IaW8VcYn71O+TTbX2CCCrZ0lo0
ccVdDG1YzoTjNzRSYakoDr0oBurzncKFNNI1PdT/UIUYGWOyERVBkDW+JrXy
DTFm2S5/Rd0myMnqy+F8ugSfVVmdNuogSFtikKiOleBauSlvQ0OQjMj6upRk
yf///gtUeehT
          "]], 
         LineBox[CompressedData["
1:eJwUV3c81d8bN29c615kZRMSKhUy7nMqlNBQyMj6EkmSliIhJXuEFNlKhTTs
cew9ShGyN0X2jt/9/fV5vV/nvJ/nOe/3cz6v54jZXDewo6OhobnCQEPz/++O
OlkJ350d4OOlnMtNYECOEQ9Kv4Z1gJ2OXMyEHT2iW0rux287wHLqyRCPJj16
aVxH86GiA7Lez6psiNGjBkGu48GLHeD4w/S/mR46tPdNeq3OxZ8wksJxPu8M
HfpT9P1rhUgneLJLLj6UpUXOo3uGv2R1gcz0X8lp738wYNHFVF7fBX97xHaJ
y/2D851PFZpHuqC8KfeZTMcmqDSO3xsV6AaxK8wNeXs2gf5jGonHj4qT5XZp
tK5DjIcY5a7lLxjckG3+wLMK5Vz8L46QeuFi4+DWh/fzcCi4rlRrby8QXwda
0BvNw2uC28g57V7wdzix15dmHoLWOvY5evTCu9eTtrxGc2DUH1nzcqIXaPZJ
Xaiin4Wpd6TFjbI+kK+VLz3aMQVEMV/pfpUBULCWdgr8OwB16uH7PLUGYOZZ
+Giu9QA8uRivLGQwANfp6QRV3/YDXVj+CbOrA2ByYMRS+14vrG/9sf/5agCO
vchP+ri3C373GKa30g2Cu7/Jjdzer/Bu1SbbmWMQOsoy/2PKawUHbpd8NsFB
4Lz8150/txlGdAPqdA8PAg2N/XZuaT30FJZO1NoPAoNz69n09XJoipHeU9Y0
CPWPX/ts8L6AgC+HDlh2DYJMBaHbJ+wxnPx69MjW6CDka2rEzGpdxVU7zHXU
twfB4tYv19/XEnDxnbAr+QeGYG2oeUzWKwdnXlh7mx09BM5bQdHeabXYyYXw
6UzKEHTe+sPzb189lg3iKpz5MAS7Z069+i+3Ab+ulG+Qqx+CsmO7PMZzm3G8
os1U+sYQHBYtYdGu/IZDSI2ySVbD8HNfxR6bfT9xgbJQzmnnYXD/sPFRdvAn
HrG4Dpvuw1Bq/eCJZ1gnVsvkumD8fBjMq36+axjvwhM65g/YWobh+wH54D9u
PZj7RtaOol/DQHvRUZWTtxdDDE2Ew+QwZCkcna/61Iujx1JfVzKMwDH+ZN9v
Q334+KPp1ntqI3DY7+twU8QAdn4HptI6I8Do4p8h0DmAX34LH/lhNALFjBHX
DggO4lkRpbV9riNQRMTtxYmDOL7YU3wsfQTumO+7ax47hOuHv2Y8yx2Bly70
Pxl+DuFFooTy0SoqH3HIepCHsa5JrW5c/wgwRV7Z2+0zjFeXOG4b8IxCe6Z8
/lXjESwhZLO9LTEK4qvBFsn+I/i05hf/zAOj4EbM3fmhcASnRVyMZ9IfBSPZ
4gPn+Eexwb6k2tJHo+AbuGHWVjeKPY0WzjmFj4KpOvFOz9wofvtAq4c/YRSI
rh9EavjHME3T5OytwlFw3vminXJ5DGc6KArsnaPG91P2np4bw52hvqmdW6OQ
Gx99Q5hzHDPkdSg8YR2DawJHB1UPjGNTRvfjg9JjYNtQu1vdaRw/kWtuDjk8
BgwbL+Uln47jj+dFLqofHwPZjjvkreRxzJRc6fTcYgzMZ5KVg9vH8cH6nSua
TmNg8cPMW3t6HFvM2nvP3xsDTduYz6v0EziHwhqtHzUGJcMCN/UVJvCAnYXo
RvIYeBUaH1o4OoFZg7PfpWePQSM88Y65MIFtfl3A9E1jEKT2RnTyzgQmxg5e
u9E1BjdnP3KeezKBP5k6C/aPjUGE2aWausgJbCqw0aC3OAYh41YEg+QJTN/t
d6+QdhyYd09kzmRN4IwX3DIyHOPw9EthRGLhBL5gktQRJTgOleoCj69UT+BN
PoXH9LLjkOlYcUa3dQKndhYevKE8Ds4euoUnOiewXsyJoT7NcfDleJdqNTCB
F41/hOkZjIOpqf+/5+MTOI7XGgotx6Ez51LW3+kJrPVzelr62jiQxeljryxM
4Jno+3FR98dBR7skacfqBI422qFL/3QcHjkwxjduTGAKT+SaS9Q4OAlrPcrb
msBj7aLpfcnjIPHi29lmmkkcEpVppJc9Dux1djQcdJNYyVCVsbBkHFKcRx97
UnEfd+1n6UYqX/JSqxAV+/04bxPVST1v23rbDJW/P3KARD82DpEf//NfoMbv
PH8NuyyMg+692DX5zQnsxbV+rY9mAuzYpGQSqfXJfH8iqMc+Ac4v3nLrLU7g
rxFcjQW7JsAqjqb64N8J7GaQeE96zwT8plSqmkxOYFFOeZkopQlwy2R6XDo0
geu/FXTQaVL3S86n2f2awK7h2o9dzk3ArcAHH85+n8AC574f7LOYAKfZ3ene
DRPY8eufsIJ7ExAW25pfkjuBOcPugbTfBDz8cWmq6f0ELjxDmImMnIC/pl+O
yyZOYJZWEV2XDxPQltLy8Se1H76EZKz1Fk/A5UMjS3vvTWDz00fSdRsmYPNU
He5wpPrfbMAoPToBIVPz35X1qP4H93+OnJ8A4+mo2/NqVP/1nGzoaCbhiAMn
B+veCazf9Bj3CkyCpzN+YLuD6l9D/r3Is5PAH17UPpQ/jqMDtGToLCZhu5RQ
15Iyjimn2jquX52EPTptR2VDxnFo/e+Duk8mIe7NrLKK9TjeXyc8Q1s8CSmT
10OmaMbxjWpfm+vSU6AqEst5X2YMC49oE5YPTkHRvrqFs2xjuJGO+Z0HmgJ8
nbe1hnrfd6PgOX+TKYjWergnumAUdxVGeaUGTkF38Q+bOc1RfDT7dXzX3yn4
fHPdkVFvBJNj67qP5/+GG7k7OQulhnBpQYBnQ9VvmE98KhlIN4SvduqJn/v2
G0zfidvL9w3i6p3frlhM/YZ74+Hod+QgvhfWteom+AcKiMw7btEM4sHHUzxZ
Xn/gWLB+9u+kfvzRhfU8n8403PmYVi9f0Y2bXnLdyzSahpTnE8blTt14rEog
4ZjtNJC2MkRP8XZjAf49v50eTsNYeaL0Cacu7Fuu9ag8ZxpChO48Bp5ObMT5
8LOj+Ax8lj5DfuHUjtc/z3GVbMyAWORVttFDXzF33+oRA+a/8OKnmGdETStW
YKKxGuf5C9nht1NGJVrxf+bsGWTFv9CekXJGfaAZNzHs1bzs8Bfabto28Fk1
4nhD21sc7X/BMPN3W/3DGpzkfnVqv/EskP339Va+L8T7y5hX/S7NQtKO86pD
bwpwGUM6Y/9/s8D2ik4oOS0fDwSPiAa7zMLoXNI/7te5WDjxkvGk/yyoXi+6
J1X0Cb+sOlOVVDwL08WW7e43XmNZ5plvqxWzYLukLb2SmIoL9IP6z9TPUu9j
MT3vj2Tc2VG3/q99FrRVby5mBMRjnsmjB0z/zsL3/MdC8elhOILtUDyn+ByQ
+F4Oplk/AnGDtvdXZOZA85htKN1nf/gY7VJQpjAHA7dcfg4thsJXkcwfzmpz
cGs86wPt7mhgV5RiabwwB1mTF/aqsCdBgBGf2yO/ObDqnuapOZkBArG5j7uD
5+A/8dEu3fhMeNt/4dmByDngPXjAr/tvFtQ5hGf1J87BEd9um6eV2UBwJ46q
Fc7Bg5SY8uljn8EnYfPc4p85qKuiWXw2lAdn9+ff2LswB2N+Icf/OOaDcPnN
cJu1OViVy522nMuHwqGpr18Z50FHRXEwdrUA5nd3nckUngf19eOV92eLoCw3
8vqI5Dw4yx3dUXGlGEJOnA3dtXceng29mJEdLAbZK7Ut/srzcFysI9GuoQRs
MnL0L5+dB58DGZlxTzDs17hx7RV17ksdGOlln8Ow1SwX/MN8HiSsbv9qlyuD
l39Tmo5dmQfBs9eNciLKoE0xQlfEZx6qjscYRZwvh8RK/atGT+fB4HXOHX/v
cnC+wBwYHDIPV00HsmKzyoF4x6th4+U8uKqfSuUmVMDRAmedzs/zMPV3/LDL
uwpgPyV7haNwHuofbQYZf6uAnu7Rp9pl1Dk08MuQ1UoFuG2a131pmgcp+fRT
vagSskH3RPjoPHjZ0crG1FeC51eCfd3veejL+XLn3WQl6FlXPNmem4fCmajX
Y0xVMOFzpOba1jzwzwX+GdCsAtEaaa1TvAugJVputfGpCmaMhm29hRag5Ncj
WvemKigej/fNl1gAzXYNPfnRKrjIzFMltX8BHu6g0VTgrgapl9+GLyktwPdj
LwweylbDomwwfZT6AjAmhFftQNUQpsdwnF5nAXa0HKyudKgGi15so3pmAbjP
m1WvuVeDnLO7zw3DBbhzqZfFKaQa6kLny/utqXzPODnix2qIFs0a5HFYgA+K
Ry1UyqvB9uMV2tPOC2B/fzLyzddqoPk+gIrvL8CMXm3K6elq8J0sTbrvvQBu
NzeCEzeqgZnmFd2RpwsAWS7Ax1wDITzu/62ELIDSvtXLeTtrgFPepConagHM
uVvfPRSrgefHlXffiluAPPv4dFe5GhA03flEMWUBLoi4L4Ur1UCiy8LY7NsF
uB0rIdYPNbDb79uJD9kLwJIzPWV2sgbevfqQfi1vAWpQowrxbA0ofAlmlitd
AOvTIpO/jWrgc8NVx6mqBXAuQd/oLtWAyqBOY3rjAhhp3C85a1MDxSvScvZt
C3BRn3jj5+UaOMpOCN7dtQAh6hKvYxxroEZyZHq4fwHG9/xmi75WA6fUKk4n
jy2ADIPH2W/Xa6DlXOIHq+kF4PnaJqh3owbOO3iSRBYX4NvfDxZMrjXQ6Wl+
o3d9AUSCA1j+j82jVNtiaRfhNFcAhz51/8B7voOmTIsgWfFEv4saz65i+Rkf
xyL0ZDInZFHzTXX+WOzYuQhSWO9HC7Ue57+fDKMEqfiz6hc1+xqYZwzPPS+x
CB67rm8uU89zV/A6L6fsIuz257Ohs6iBTUV9t6/7F+GUmGKB5cUa8NLZ2xWi
vAiUQQ56skENMFoxq+pTFmFW+7Ean24NBNwZf8mitQgPmLgN7x6vgWcpKeZP
DRbhZtjvGk3FGuAr9C7RNlmEmV/x7bkyNRD31VKY0WoRnIOR4lPhGnj9b9eA
97VFGOyKXDnDVAOy3OsI3VqE6tVGrVOb1fBBtjNp6/4iVNl5X37/txryjSP/
c3+6CD+eFz5/+6Ma1J1dq46ELgIhMO7GqZpqKPc9u3s1ahGiZQqyTfKqoeEj
6/itlEXwP6Uw1PC8GnpYHjs6ly4Cvcqr6/IG1WAl/l+jXPUiWEvQ+96BahhV
OSr3u3ERRs8S6TXkqmHG7t+0fdciHBRomtBhqAbasts3rBcXQTRkvCUmqwqk
bl12uyC7BOwR99UzpitBXrX/fML+JYj2idB1bq+EQzQX900pLUG78uWgzuJK
OBakM/bw+BJ4GnB8eh9QCRapchfemy/BEa6347fFKyH6x/w+utAlMFO72tF/
vAIYDz8c/7CwBG+EHW9uGZcB68ZKxfraEjh1aeWFKZcBZ7lLvBbNMtjwscIq
TxmI6tsY/mJdhvqgR59i3mFQt9OqJEgtw3EBoohJYincimJJuHRxGeQ3Pc+0
PiyGkaXnRiwly2Be/GmvvUg+JB89eLO3chlOneGyymzLA8vgltAPDVR+SYjL
xOM86JZkrD/fuQzLMiGjJ/7kwrfzrmpxC8tgtoPv8FJ+DpR+1BOVl12B+2/z
l5QvfIbn12inTj9fAYaTJVlCWplwoSCOIBa/AtY+666KnzKAk1FFYiF1BcJ/
86WVi2RASJyz+fNPK6CgJH/UYvMd+Db+aulvXgHzf4a9y0Xp4LIn97MLwyow
P7rrEmacCqdGHR9E3FgF+hUmXWfZGNB+IJGh6bYKWwGnH3Iceg7HdvZ0L3uu
gmxtb9dpiAZVLX0Vs6BV+DD+WyDPNBJk0/YtSLxZhab2/m8RaWHAYrfokNOz
CjJR2ueaBB8B07+M5/bDq9ASINTObu8NDFF2NfxTq6DpUfRg8spD2KzqkPBc
WYXi+hc+7nlu8EeyoE+bcw2cRhZt2Y3toWnkwYXOE2tAH/L0ljS9I67zUHoU
cHoNNO3cmQ0nr+Mq7r8f1Q3X4MRoyt/tfldcrGnFkWSzBt2Lg/2GCW44I/VY
w5UHayDqR7sqMOCNg213oI1Pa8C7UR29ejwIB2xi58yCNZDSTfJ47RmMn0S6
vbIsW4Pr3nZOl3JCsGfV5Hpl8xrMX3552jUwDDtLNuUETayB9tmmywrtEfj0
SNheYeF1uDt9RP4T83PctHfkh7nkOmQ4TVhuej7HujeVPWNl10Gv7nBK+Pxz
fJKu7yuf8jq83K9xJvFHDD4muvcO19l12DETsmrn+xKX2XuKGBitQ9YMq7bI
n5cYPnyrCzNfp867GVKyBrFYneK2i/3KOogyTg2p8Mfhw+bVZUw+6/DAd5PF
7Nkr/CWFz/HE03XI/l79pGz6FVb8fZXrScg60AX+F+2lHY8V7nNepo9dh2vP
I9N3LsRjmRhLlq3P6+DBNGxmIZiIX/d/+qJeuA5qF3fzcRxPxLulCRbuZetw
gn1XxbxDIhbPzchebVoH3vE/PYafErHgjzXDhdF1qD3x2zhFLQm/3KW/feDP
OpiPEh/RmSdh/v8S013m14Gj/RjEuidhnnntjemtdZCrF633yE/CJFJk4gTv
BvAzhOvs2pOMQ4zHdaSFN+BuWsKM1fFkzJagumAnuQG6pwTejZsnY6LCoNbw
/g3Q4ckQKQ5OxvR6Cr97dTYg27AuMX4sGfs8844UPLsBKqlKD5k3kjHNrx8a
ZkYbcNQ7sLSEPQVvXnEP67TZgJPEalfCoRR8/2PLEd4rG9ByZQf/K60UvLYq
Nmx4fQMOT1x/5G2Ugpf96g5/d98At6/PdVTupOBbrbv6yT4bMGfsNs36OAUv
8Fx/evbpBjw+Uj568FkKnk3b+as5cgMWrg+gB5kp2HnawZc1dgMSQowZkwtS
8PShYnndpA0gEGIqhKpT8FSljVdd5gY8jNIdFO5OwSLhnY4hXzaAR6g37NpI
Cr5gcdrwQtEGXG4UM9qYTsH+e6tAoGIDpqLNcuqXU3Dp6hHZgboNYDjXReje
otZT/YH7desGiF4Nb5UnpGKZZ7u3r3ZsACd5X0UNayq+ZBU7eaB3Azybfha+
5kzFEfLkHyvDGyDg+824lTcV164/KS2Z2oCZhgsLRwVT8WbtZvqjOWo8N102
GtFUfCDK9ZnO6gbELlidZZFIxZdtJh5wbG8AzfhWuN3uVBy7z8KhnXETzDIP
J5GkU/HXze8GsaybYH+z6y+bTComNOhoWHNtwu5e7m0LKlZ7jqWlBTYh+HyO
KyMVu9ge5pwW3YRIhr1keir/9YH3m5+kN4G+pjffhBr/15bouJvCJkyfUGP8
f35SU/Q3yuFNeOVj5cFHrU/rBWsxg/ommOv740fU+u9f9nndcGwT+lqXAk7z
peIPB1fDwnQ2YcF3cIc7VyoeoXF2Nzq7CW9sSUkk9lTM3zJsJ2i8CbwHmp8R
mVLx6ViTs0OXNiGmwuKeLW0qfuTQqppuuwmLNyrtRddTcP5hrd3OVzfhOt/H
Oe15qr90RRyHXDeB8vao0OhkChb/un99zW0Tvm2L9i0OpOAgR8HWx082IUcx
vutkcwouV44o0A3ehIs/2U9HVVD7jYEplRy5CTolL0Vs8lKwVcKC26ukTThQ
lGl9LSEFRzld+e+/9E0wUvld/DIiBTcc6dff82ET+r2SXqlT+/HQjwbxnGKq
nitRF3ZeScFXkhCbe+Um1GYG1WibpuB459wV1LAJgmQz0uypFMzEnNzU9HMT
QhMqPmPZFNyrce/OyPwmTLb2zY+PJGNOlr9W79Y2IU9zTuV8WzI+2Wmr60Lz
D5SuMQsb4GT8yfWs6CbbP6hR/ZY89zwZP3kj3cC15x8Y+bJ16mgmYwVyh9Bx
y39Ak3f7fURAEh4LHvOJsvsHcTfwnas3k/Ar4sr4+NV/gLwtEA31f8HKwPcp
yO0fkM9opmjKJeGpZRPtjvB/EHBh5XV4fSJO6+l1vlL1D6y1XXviZxOwYPoo
Dt2zBflfrvmmWcRhIixZ9yxswS/xygFCUCR2OyrDlLu+BedSB5/Fa0fiseNm
WaG02xDNakY4RhuJK06Wrx/j2IaWTU3/e3ee4fsGwc/eym7DabdB2ovWEfi3
3e7qO9bb8Ph9I7+7ahhuCjKUIbduw1tjga1q8lOsGvq0Zap9G8y8CRw8oX44
PbzoVlXPNjRthmgOsPph32ix8rtT2xDk2b64wPwEC39dlvtLR4PWLo96vyD6
4o6uimpDYRr0Zz64kEnGC5+YNl0RN6RBu3hW/I0abuB47kffH16kQQG1aWvZ
8y54Ue39hx4zGqTu+GwmVNAFJwZs2Efb0CCPapf8wUknvC4d18nsQoMqGB3c
TW9cxhk2vQWzATSoZKJeNkDpAqYLYIzWD6FBeetPfp2Gc/jiR3nXd+E0iOHH
Cd5/r/QwI42nrG0MDVLxFuN9yXgUW7wSjv2ZRoO+BA83qO+RAlKnpUdpGQ1q
eLIvag/jRbi87XdxVxUNStGIF08MNoViqexDbrU06NAaP/cW+yW4cptm+kAL
Dcq2ONrPu2UFFZxJl9J+0aC+MhXTeWwHt/SHKEHLVJzkJE8X4wwNt4i7Jtdo
0BsDrn3FyddBNE5xResfDXrVoW01fcEFmqd8PmzT06KnvdY+n41ugNRTCdGb
ZFoUsDlnNqx5EzorbGlN5WhRd//g+XONd2D2aLfAg320aDDpC3G3/F3YUX7m
UKIiLdq1Ei7gGnwXlLCq/ZgKLRLc+mlyW8cNIotIza5atCi10TmZ9cM9yFB9
MhZ1kha5R611ZDHch8qCje18XVo0xfFq6MfF+zCfN6a4fY4WqVccWfq0eR/O
fCmOCbSgRfr62fdqFT3g8kHFT1nWtOiBxuKNOA8P8Pz0pvGbLS1S7Tf9uljl
ARnZEVu8V2lR8PlXpQrnHgAx08E29S4t2pdiJq140RPE5foe1N6nRT/T+4Is
oj3hyPvzz6ce0CK/N5Xaot89weEtpWG/Ly1aml0NdDz5EGrSuPeXhNEijWuV
L8TIXtAnGaAz8IwW5fcrrCXJesFSyrYN/XNaVMCjc8T1uBdIJk9F6byi1i/8
6QLDTS9QF7P64JRIi07fzbOo8/eC84ntdaEptKg9lKgwkOAFPvFlG+1vadGX
kx7ipAYveCmktHMtg6oXN/m1bJ8XfIx7ryCYTYuUV/rfv5rzgoGX0dY2ubTI
oifSNJzHGyjPnWpnKmhR315Sd91FbzDiGRog19CiA21nrpZT58NrUcbrh+pp
0e2lw+r8d7wh7tkxefdWWlRn5fdqMswbvnDma8e30aKeCzcbbF95Q2O4vFV5
Oy0qdjeoOf7WG9ZD+Z7t6KFFRr2vLyhib+DkCMmQ7adFzMTs/zTrvWFPCH2N
/hAt8tD/oYrbvAGx3et3GaVFqxe4aFJ/ecPFoJnVZxO0SNsjp3Vh2Buus9hy
5v2mRe+bdYs//PaGJwFde7tnaNEybXZL57w3xDOf0fo3R4vuezEQXNa8Iedp
lYXoEi1isPxifGfbG9JPNfL5rdKitnKPETNGH3jJ2tY2vUGL6ku7zr0g+kBw
S2fQhW1adDyL4/M+Dh/wCuvXLqKjQ4k/klxEuXzgpsEYjTiBDjFcDLx6jccH
LnNPFz5lpkOXhRQf8PH7gEnHwq2/rFSc3eIsscsH9GLWFYxIdOjMcae1UEEf
AFPayWIuOsT7YaLaUsgHFAWZUiR46ZDtzUWnSCqW7GO/FCBAh3xzOe/uo2Le
xJ28c0J06KbWC3NFKp9oI/jNWIwOdT7Lfhwv4AObEhKBpZJ0aEfx+VO3+Xzg
7+gerd0ydGjT8+x83k4fGHqzfztwLzW+5okce04faL+iXDCvQIeiBd4XPmb3
gbq9lJsminRIgGU1lIt6/sJpTfmyw3To1zX3R1xUfTI/6I5LHaFDZH0XFj+q
fok3DJKC1emQc0h0wnWqvhEHTcwWgQ7t7ymubKHq75Z3ubVcmw45CYbsWKH6
dfXeNX+ZU3SIqCp6tZLqp4XareOh+nTIrdN+kPW7NxzH3nnmF+jQ3aaiScEy
b1Dyfnqj0pgOnRy9ETWW4w0yx0P3yprRIUOeT7cPvvcG9tq4hBVrOpSyPSV6
KdIbaP1TTCzs6NDW0S6yxlNvWDz1jqvagQ6VZas/eu3uDV0teX4R1+lQi1oo
v6C1N6R2tF2Xf0CH9p4R1C+V8obnMV17Ir2o+TiP7uPh9YYA04Hh9Ud0iPNA
lCjDDmq/9U0b1wXQoR9lR5XSR71AdYwJ/RdDh9Qsc2s14r1APp1jvT6WDtkH
PZ69EegFoo48X/Yn0KGOAp2kk25ewDgjIbOVRocCz78+OXzWC74uUUgvPtOh
6frQfYsbD+Ey4+2BlhY6pJP9fo0xwhMEROp/bnyjQ98suV6Z23lCi4pQq0w7
HQoeS1tXVfEEJafqEp9fdEirvbE1pucBEL7vjFWaoEOMZ34yCIg+gLTEXMN4
WnpEY1XSwhvpDiNqqw3XDtEj87Q64wPIDf5zdc9hfUmP+uISyHeEboCSYl/O
nlf0SPlNvfXUiAsQ51GudiI98v9DvnItwwWybxDyvF7ToztVbtLuai6w6RKe
v/iJHjW+ltEf/ewM0dffFPU00qMR1TnTLaWrUO/0vTzjHz365wZ9Xs62ECen
VFFPw4DUl27v/M5gCy5/YirG6BmQledqTmjsf8DjZFEpSmRA5XbOfCcbbMDm
6mRVJA8DMorqumklZw2bV7ZrPfYxIFX733FFrOawz35vi541A+K4m+D/Tvks
9F0RuZ5py4Aiz+zhfjRxGoKcuEjsDgzINkC4r9JWHyZvbJxrdWZANT9S9s9c
PgUpHo3t5zwYEFe5z8KLUE3gjbjaa/ScAU2ZXfBRbFaEmkhLz7yXDCio/5iO
gOh+uPX8vAhfPHW9d5tyb04WvsWpWXelMqB7K7KkA66iEPiGZdTsEwOKo+X6
8nR4u3S7+P0fq2YGNBEfr9SgeBhn4YTg8q8M6GxCgpSIpzI2r3imIP6Dio0d
9bwrjuCCWneX4W4G1GI0yTdymIJvtuku2k0wIELiq5MTdsfx+PjvDUd6RpS4
+spjr50ujp7qj2skMKInbQ2Dzw31sOb0dw05IiOy/LSyf/aYPk6aL3o4TaLu
D/zrS955Bpv9C6R3EWZEb/Ly0zJ1zuFWTjmW20cY0f2i/Jzauxcw5dq1yVh1
RiSWMTsj9PUCzqrNqq0ARhT67eJJFmlDHOJxwJekzYgOF77NLf5qiPXGlP69
N2BEfnvZBeq5jHExcvvVZsiIzozSnpKzNsZysQUFaxcZ0a0KdPlwpjFmOat+
54QlI+o/YaOuePQibig4+nfoKiNaM77No37RBKtyP2pmvs6ItDNHjLxfmuB3
zlXv97syohzXEdkHv0ywv8QJB083RnSnyF2s2MQUnwzWG+R/zIhuC3cdiTxh
hvPHgzF6yogYbv4OGHpohqWPtb6yD2RETYJTR3/mmmHCyjnTnHBGtI8vl9ND
1BxXWxl/PxvPiPy/N2e3DpvjQ0UxH+8mMSKO709pY8iXcOrO7tD4VEbUvrU4
fZhyCfs2mOv9eceIlKLr/deeXcKLkvGyXFmMyDtZ6LBgySX838N+JtWPjOiC
4PpN9tFL+Nghm2q/PEaUKv1vFxywwJ9CUlKyChkRZ3A9xd7QAotPjni3lzAi
7IxyzrhZYNp4e4pEFSOKm5L4FlBogct2XMsr/cqIpkVrBncdsMT7bbKiRr8z
Il11M5E/upY4sfjvTdafjEgtMftUvJ0lfnjDdb9pLyNakpkcfBdliWcaP7N7
DzCi1/gBH2OGJbaQWvrzZpgRlfscbkPllpjy6+7bpUlGVKzL7mM3YYmzDhf4
CU5T/SesnzdZt8RCYet2x2cZ0caQkd0rRiscNKWm6bjAiBQC8pIfs1nhTc0H
4uHLjCj3kLbMGLcVdkoopclfY0Ts0VlteJcV7lnb7uvbZESHukSjuMStsN6F
oyWMNAT0MvHcvSFpK1yU5RMrR09ACoT7CfLyVpigZyjwnEBADyvZto0UrfC5
SekXtEQC+nmON2dCyQrHPVnndWIjIMt/YgEjqlZ4XKI5uoNEQPXTyv/pUayw
YnnCzqPcBHRqdIewyFEr/MDCNfI9LwG1pB/pNj9uhes2NLl4dhHQetDbc0xa
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
g16XQENCUzzUcdmHDnexKJWf5CchhWWdBPG9G6U1h15M9AiQ0APRbzfuhK+X
frm0yXFDkIT+MR2K8VhdKw37UGHxQoSEfmYf2VlSt1p68vyZzcndJFTK1F7x
2nW5NP+lg3KgIgntL3ooWD89VxqzJzazWZeEcsaneu9ODpUuLminPdInIfNv
hnVa3wdLz5TOxx05Q0Lz/27znsEDpYTzp4LSDEioeNGCzVC9t/S2x5rjAxMS
mknW3ds886PUoNVYRt6emq/vt11e0ZfSrBf0osMOJBQtlF1saPSulNn2A+8L
RxLy8t5wD8mMLi1bJexgdCYht3b8d1opmbJPPHe05xYJSfHMbMj3V1BYb3On
BPmQkNCYI+FgbwfFAcpeHvMlocKjD5Q6b3dSKpmdIlYfkxANf8ztr8zdlPvx
ld62/iS0S6jTLUuilzJZ62qlHkZCJcq4TCd0kKIZIXxxPpyE/tj6VKadHKIk
mjecSX9GQnYSyj/Dt4coF+fEgPs5CW3SHrOkvzxCqRH4JvTnFQkpXcuxfc81
ThEf9diZnEBCjp/8aAzyxykPPsiwXUwioYvrzTvtTScohzS9NitTSQhZ16bu
fj5JSb6271fse6o+nNG0IYu/KQ/LgmN0C0hIP/TA8WXxWcpUb1nkWiEJ3Vr3
eLppPUsx2lgIe1NMQk88KUXTCbMUOSVTf/oyqt4hav0efHOUzvdS94tqSOgX
t8hIxMYc5Xi9yZ0rdVR971fEqh6Yp2SNBbnyNpCQzNYvHz+7ecpjsQXHm80k
9PDeso1ywzxF8Tk22/uDhDo1hWjvPl6gvPoyb9zVTkKrfqdzXnxcoDC17b7g
95Pqj2QMf0nPAqWfNUhvuJuEssjjJ8T3L1KCfC5qxA6SkInCL6k/jYuUlYTA
IzrDJOTHFXIheXaRYlNSenhlhISsbrcv3uReohxZlVQ4P0HVc1Wfy9pkiTJ2
bU6Y5S91f78V0/jPJcq5QMldBbMkVD3jz8e4tEQpTjfmtZ8noclBJcxBXqY8
Gy7hqFwioXxLOr8SrWXKFs0cy40VEhosOr2ubbFMcRSWZBJZI6GPJ3kePbu9
TEEmATTumyRUnp3Ln5O4THl/p2RTZouEXMkDQu++LFN4ImdXO7ZJyJT4sTeh
dpky3WI0p0hPRibaBlN4aply8Y//9AADGTl4uJ2m2VimVDGXTIYQyKhg/3zc
NeIK5aWmxNAUMxkVuixETkutUBhtjPpiWMiI81LHHdZDKxSXh/7d2mxkNPq0
8rMLWqH0xBV3LLKTUZORqoGQ3grlROHftmQSGW11dAtyG69QPv0Ubz3LSUbu
tXbJhtYrFOElw8YtLjJafFZ8eNBxheLP6V+bsZOMsOHg9JebK5TFfcWVprxk
tPR9Oa3ZfYViqf8XM/GTkdUj9E/q0QqlwVG8OFeAjNyeiBsX+a9QDj81zLcV
JCPnTLFfj0JXKIlpT79wCpPR7jvDt9wiVygslUXZZSJkdJBV4UdozArlzsBM
hrMYGQ2fnHDCsSuUoX9ibwUlqOuf+e9uvFqh6O8yTGuQJKNvD6dmlBJWKDEj
CmVmUmQk9yL7w2UqHslk+vVHmoxmjHjfvohfoey/O7T0YA8ZLfgozv2KW6F4
oGISx16qHuGHktVerlDqmKP3JsqR0dDyoHhN9AqF+/t17QMKZOQvGS71NGKF
YhWnY12xj4z+BMpmBgevUDLsJDzOHyAj4Vcy9EN+K5RVhX/RI4pkxFH7vDzU
e4Wiudrx8fYhMgq9y9OSeH+F8isgYPy5MhnNC0WPka6uUKQu2NLtOUJGvyYz
1b1sViiuQhShQlUyMp+gu33TZIVCzJ4z6NEgoynBTsctrRWK0b3Ga9eAjBhF
tzsS1VYoycfSnm4hMvrxN9unZ/8K5Uj7xVJRTTK69OgkkhdYoTis4z12p8jI
YBd66zSxTPlS+UJzWZeMzOTzT/P8WqbQBN+09NMnIydiro5N8zIlRkQ66u1Z
MrofynO/M3uZUqsZQjNjREaGV8X5u1yXKZzsDrseXiQjn0c+bw7bLFMsfh5V
IpmSkazQcDXp3DJl+crSVcVLZLQmUOApIb9MOXaw9UmlBRlpi6SV6ggsU0I2
05MuWJGR46hnVyNhmSIVav7zzn9kJPNb4XBB7xLF9aLS/A47Mmq4UeDBULdE
KRUjsb24TEbtlNcnLn9cohh+qTxWdIWM7Pws+Yu8lyi+XbJZ29ep/RF2sr9V
YInyNZmhPuwGGQmaLN0b216kCDr1DYvdJKO9u148Th5ZpHzeCufXvENG70Yp
ZMhcpAxJrPk+9SCjj2OuYkfUFylHnWvNyP7U+xObt8RivEBZ75zUrgogo6rC
02hAeYHy5Tir4t0gMkou5XZK51ugSPGfY+oNJSPez9asm13zFNaq7i/p0WR0
9JZcVLbpPKWTf4YNpZLRrQp+Y4sTc5QIX9LafBoZBQaHmWGxOYruX8WRtDdk
pLIh7uK+MUsprbpbyPKe6k9ud7R95iwl9Tqt/c+P1H51GC+6zjZLcanmLnPG
ZJSWLjaeETNNSRC0kWxaIqNs2ojDFXnDFNWDexVsVshIWiNAM/7qMOWHzqLy
6ir1/9F48W2/yDCF6e4TXclNMmLwFG377D9Ecfn2ztWDjhONPi4/pPrfIAU9
WSiT4+BEBiUp5wPM+ihDf30vBctwolMRYTFBVe0UD8JpewlZTrT2JGayTq2d
wiPEe6NgLyeyqK+TiPn8g3Lq1FvfUQVOtMPQc0om7TvlU2rze43DnKiIFHfS
Mfwb5ZEJz/r0UU6UbpotJr23kSJZ+Sb6tBkn4qry3sw8WEBpkVtN7THnROdG
D4S99MqjuEWf/OxowYkI1i2CTS05lMYrk61PrDkR62uVHnTrE8WVtJcZ23Oi
l4J/2Aza3lDwpSz3fbc4UVlh5wvRbKtSh9ot/5LbnOjrJ66J00JepZwHzsTo
3uVEViM//5bNB5ZeZpj9Yn+fEznGMQjzpr0oZX1/YCbBixPVCoxptMuml5qu
frEiBXMih/Gt/Mma3FIGG8br8SFU/h2+wdts+aVZjYYP5MI4URPNiR6/swWl
tAnLL04+40TXq+Uc1JuKStO1VL57veBEE9uJdLN6ZaVLEUVac2mcSKW1MKkZ
V5XGb7JcePiGE9WYOlutaVaXnrxsbsP2lhNFvF+Dg3XVpXFH/nnuyeBEnRq6
/+brakqPDVDyrT9xoguSRm/dvtSVhslXyLaVcqKTT73/cR5pKk1XMWP2KeNE
NpnhCtLvm0rx8cXxAxWc6AuB5qn5rubSGROptPBqTmRLdzdZabm5VPdJgMi5
Jk50d+Jse19Ua6lNuMQWTQsn8uyK1Fdaay29H1fck93KiYpNzZPM5b+Wpn+a
eUH6zokkbMi3hYO+lhL6Dbi/dnEiQRx435PyrVRo6vf8w1+ciCP74kChw7fS
Q0u+3/b1cqLzl7qe0EZ8K/2PJS8kdIATmWWp/K+BKo+nOgHiHTYSlTcUNkel
XihFSY4YR2mVWptOUlFtLSo5Sl5YkcqZrqUsW9TyHLGvVdLkyZkS7/1+ZUVa
cnXnWg+xvz+/n5n5zPc7853puPFvA5WafT91Uxen74VZ6ZsACTXaibrGunlY
Fz9vpt9VCX12dq7Me8dD76lxLjvvS0h7X9jp6Z94eCz12BvZsIRCEtu/Pevn
oX5SyNwJAVJKuiZoPjXIQwP/tIi2BCll31J7sGSIh4Y5nUnibCk1ljieiBvh
oXqKX7hHi5S+VL3ZuvobDxPStEthQEry0mDTj2M8LE8V+4umMbSyR9i7YRKg
MFpgITJlyLnfoWF0MqD+tDEX1R8Y2jfekp/zHeCConWde90YEigej3eXB3zr
ayxI92HootpMX6WpgKGaz54yAoaydbPWlygCzio4WiEXy1CZoZ2BjxLgfaOC
aLMUhr7YBnTVzgAsHL/eX/UXQwrOypUhKoCPgwu7zB8xpLP9VoYhABotMjd9
WcPx87I5/UoV8PcVU+RypQxtPNy4N2YWV99glF/TzND+YD+0VAdstVCotOrg
+EUq6rzX4PJFfKXZHxkSplg1O2kBrlCvM3ca4fhkssXD2oAxRY9yn0xkqenO
4eRsXcAUldZDkxVYUqhK36qoBzjAbpM3U2VJV2JuWrwAcILy2VPymiyZtUjg
Fz6gvP0B4SkdljZ2e/dq6AOKXt7xPaXH0oE+uYYaA8DNy136PixiySPboc59
MWB44LqC4MUsbd0bWft5CeA1i/PqXku5evXy6oilgHNzVG4nG7O09vnkSjVj
wLN819QZy1myPmP/+E8TQCtr27F7HF65+nSp5QrA9Lt2CTEcNuove1hnCjgj
2qox1ISlhcJJD/aaAba0xs6PXcaStqfdvf5VgK5zlULzlrA0SyPibrQF4N03
SkVt+ixNrxcXaloBWnS57eEvYGlK9MQ7uasBVUywTsDpG1ttm4s2gPt7T87u
UGdpsD88W4qcvjhHtX0qLH0Slt4+YAfYd83Na5ybX4fnhEyZPeDO9527aZyh
Zg28EbuG0yO4aJg9wBBTH5am4wh4LDIq69k7hsqtx5PXOAG61S9R+yJhqGTA
+mrjesBFEQmXlSsZEuWEXvJ2BtxxJu5j2j2GMjTH4i/8CDgvdSDD/zrnT8nI
Cf1dnP+WZ7Yr8BlyP2cZVOIB+CDoCk1QZ8gVQ/w37eHi+q+Hbisw5JA37Bvo
Bdiz1KCls1tKeudlnuJDgGkLX9eEZEhpjq35HldvwEuO53bbJElJdejEri4f
wPeF1avOhklJ7sDQNuWjgJnRtfZ/bJdSu+1/G3YEAUbxvSua5KTUNLTS6cNx
wOmXdZpzP0lIkh/kGBYM2F0qTprSKKEyrUHbTAGgrk1G1pYsCd2Q9a/8GgFY
7f3UsGethDwLenXPJQAuPnpwh0JAA/lEbB51ugDobvtTSO+WBgrcLHqpdJHz
T35sSYdZA50dCIxPvAJY1hJarjhcT3nmspGrqYAmX8tfmQTVk0w8/uKWENB6
0vIsv4o6SpQoxZVXARbHbHXtjnpCKTd9D56pAUzs3B26zfoJ3Qyos19XCxg2
6uff1l9Df89KHK6tA3z+dpvlqFsNNe+Eg1IW8GH6wvlztKqJ365h39bO/YPb
uiauWRW0THRSO6OD6xd5LkFldwVZRL2S7e/i9umRfmRQrYI28FPv9Lzj+E5L
uqsTXU7HvHW1v37lcHrqRGHAYxJY/Sor7AN8FHD41kXjxxSl3MYEDABmh3lz
r7mMfsu/GTM0BOjvAMmxB8voRrjcz8XD3H0t4y8t0Csjoct+O8Eo4Ksic7/W
VjGJ5lVqWY8BrtNljtxPFhP1LZSNjwM28S2L/3ER0//WUM2x
          "]]}, Annotation[#, "Charting`Private`Tag$1366680#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA5lCdRLiR5j+Wa11JBRT4v2LbVL8D
zOY/wu1j7gDr8r8Km+FtcdnmP6WgyOnAy/G/slpuHN/m5j8jiobkiK7wvwPa
h3m6Aec/TGW5CnL17L+k2LozcTfnP0Ct8oUOWuS/5tUgqN6i5z9ZzvFYSNS/
v46VrVZMsOc/+12IkiobsL82VToFur3nP/grt+Lg4WC/h9RTYpXY5z9jr3T4
bTG+PyjThhxMDug/H4Vt3Up21j9q0OyQuXnoP27wIVXMPOk/EpB5PyeH6D9g
0vunCufqP7pPBu6UlOg/reuS0WWM7D8Lzx9LcK/oP/5EzwZAyO8/rM1SBSfl
6D8U3zFmQALzP+7KuHmUUOk/fBa9a4DG+D+WikUoAl7pP8MCksHic/k/PkrS
1m9r6T84lS3FxR76P4/J6zNLhuk/rnSiaQlt+z8wyB7uAbzpP41NJcaw6/0/
ccWEYm8n6j81Uw5hcDkBQB7kRgb2M+o/h2vVKPJ3AUDLAgmqfEDqP5hr3H1f
tQFAJUCN8YlZ6j9+jmHDCC0CQNm6lYCki+o/v8HJquAPA0CG2VckK5jqPwfB
tPX6RQNAM/gZyLGk6j/kjZuoCXsDQI01ng+/veo/UcJz8xDiA0Ag6kWCDcfq
P4KAN7YUBgRANTf4cQ==
          "]], 
         LineBox[CompressedData["
1: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
Fkpf10gztFDgNPh/aolxZ6Hw4pdsvaUKnKB24/eKniz8pk+WaE/Kc9TM40cy
vVhoWtRRpMuV55yQ15Pl+LIwx1/lBybKczj7isLWBLGwveCdfm7vAo6b6MlB
+UQWdomJBy7zkuNIekgdu5fEQg2tXX+kLpHjFDXsjFiZzEIVL7PCOVxZzhy2
8JZdKgsDXrClW2xkObk2G9vP32Lh1fQV+9S0ZDjjKeU2ozksdJvbcvLNVSlO
8qoa3TaK0e8zW0HkL3M4uRt/l71QxcIj+2Qd7WvFOBwrwbB+DQu5Bay7KRFi
nG97VuRcfcFCpb72vbm8WcohJl7duZGFx1ftdBx8OkNJf9iu+OYdC1eE8lyy
nSepsOSBmSYBC1V9RHs/tvGplNvhvRFCFv4MZC02M+VTefeVyleJmP7IyXqs
2vSd6qqwDUmcZuHB077sQ9QIZfQpf8xRnGBx1W8LdO4MU1sE1q0/JAhuiYpK
XbzzI+U12/ewQIpgkuLdPZEKQ1SqkvzRebIEM8/FBXil86g8jQcOFXIE39ux
/yj376dq9Cx1j8wjGFgpfGdu+Q/FtwgabljI5Gf1O49p91IyW+bXhSkQ1L2T
b7V4eTelvvt+th4heNdYqlXCuIsy8twU1aNIMKxrbV9cYCflFNDlflmZYLTP
cYfYhg7KO/Q4mi4iuLtDdrbTsZ0Kj5ZT/6JCMGuheY/LRCuVdiVrJl2V4HFp
p+ddTW+o/HSzXvulBO85zxpE3m+hanK4ZVNqBPfV61xqVGymuosDbuVpEPys
sXpAbmMTNVo+N8RtOUG36bkNa2SbKJmXf7jKaRLcnPMwwt24kdJoMzYs+43B
95PMyGh/TW3oayOHtAgKk4e6R3mvKKd/D4+p6DD8/Ne1upyoo3xoydZ6XYKv
jV/r1Cc8p/bnWTfvXUnQxJQMKoZWUa7u0Q3fVxEU0ygNXqtZRm1ukahT0ido
0LrUdWVpDgUxVs9z1xFEyxMuHauiKSPzqCpTA4LyVaJnd6ibsCJfvNx9A8F1
WtIbxo6VgpqHZalgI8HSEolFl79UgbLKhb9iTQjqz7S86s57AdKxc4oLzQke
c3n0/at2C/w0tyjETQSD2D/2Dn9uBaHgfF47ErxoH8p3MeyAIQ+xnEkrghLs
h0JI64JeFcxMsCHoXXqBNLK7oePNOba6LUFtv/6SE4m90BjLuVNix+jBq0un
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
          "]], 
         LineBox[{{0.26014068408597907`, 2.502969192093645}, {
          0.26042482866549355`, 2.4267137574121436`}, {0.26663405569196025`, 
          0.8623059713863822}, {0.26818636244857696`, 0.49187959335623543`}, {
          0.2697386692051936, 0.12946693820765587`}, {
          0.27284328271842695`, -0.5716714100287715}, {
          0.2772617310626593, -1.5048878541772175`}}], 
         LineBox[{{0.14010080276562417`, -1.5048878541772175`}, {
          0.14136768827188126`, -0.2917990944550735}, {0.1443187933901834, 
          2.502969192093645}}], 
         LineBox[{{0.021294416396703764`, 2.502969192093645}, {
          0.021468927908561627`, 0.7274458003977258}, {
          0.021738559272931973`, -1.5048878541772175`}}], 
         LineBox[{{0.0003870207833143643, -1.5048878541772175`}, {
          0.0003943799312453495, 2.502969192093645}}]}, 
        Annotation[#, "Charting`Private`Tag$1366680#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"rads, rads/s, rads/s^2\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Motion of First Digit\"", TraditionalForm], 
     PlotRange -> {{0., 4.999999897959183}, {-1.5048878541772175`, 
      2.502969192093645}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a1[t]\"", "\"a1'[t]\"", "\"a1''[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7198168144357357`*^9, 3.7198168453713923`*^9, {3.719816879064365*^9, 
   3.719816885463499*^9}, {3.71981691588974*^9, 3.7198169329623485`*^9}, {
   3.7198172256418767`*^9, 3.7198172655161376`*^9}, 3.719817311880705*^9, 
   3.719817659002096*^9, 3.719817832130289*^9, 3.71981790785709*^9, {
   3.7198180050564375`*^9, 3.7198180120319805`*^9}, 3.7198180440601544`*^9, {
   3.7198181043313413`*^9, 3.719818124964225*^9}, 3.719818238568182*^9, {
   3.719818342425624*^9, 3.7198183565946035`*^9}, 3.7198184265249577`*^9, 
   3.719818471478754*^9, 3.719818517285822*^9, 3.719818649431568*^9, {
   3.719818704948146*^9, 3.719818734260067*^9}, 3.7198187709405756`*^9, 
   3.719818892099652*^9, 3.7198189572588654`*^9, 3.7198190490197935`*^9, 
   3.7198191602093678`*^9, 3.7198195245278378`*^9, 3.7198196750419493`*^9, 
   3.7198197471877337`*^9, 3.7198197982514763`*^9, 3.7198198987095237`*^9, 
   3.7198200098840604`*^9, 3.719820043514459*^9, {3.7198201648580275`*^9, 
   3.719820171964919*^9}, 3.719820209240008*^9, 3.719820494689863*^9, {
   3.7198206110860376`*^9, 3.7198206414319053`*^9}, {3.719820676258611*^9, 
   3.719820710373522*^9}, 3.719820744982769*^9, 3.719820856534018*^9, 
   3.7198210154485016`*^9, 3.719821136981367*^9, 3.7198214232782283`*^9, 
   3.719821461339389*^9, 3.7198215324203434`*^9, 3.7198216260532827`*^9, 
   3.7198216699768934`*^9, 3.7198217237568564`*^9, 3.7198217720702934`*^9, 
   3.7198220566255903`*^9, 3.7198220900715*^9, 3.719822236528865*^9, {
   3.7198223226096563`*^9, 3.719822346867169*^9}, 3.7198224172895627`*^9, {
   3.719822488703871*^9, 3.719822517785368*^9}, 3.7198226401153593`*^9, 
   3.7198227508247547`*^9, 3.719824008053546*^9, 3.719824043673233*^9, 
   3.7198241086449475`*^9, 3.7198242150267572`*^9, 3.719824266478518*^9, {
   3.719824315788599*^9, 3.7198243496035185`*^9}, 3.7198467101657495`*^9, 
   3.7198467691030893`*^9, 3.7198468160214915`*^9, 3.7198470320569863`*^9, 
   3.7198555376967564`*^9, 3.719855582044532*^9, 3.7198556436552753`*^9, {
   3.719855701714614*^9, 3.719855730669586*^9}, 3.719855763694378*^9, 
   3.7198564198688383`*^9, 3.7198564670051403`*^9, 3.719856506358783*^9, {
   3.719856553281522*^9, 3.7198566070253553`*^9}, 3.719856780374275*^9, 
   3.7198580323528137`*^9, 3.719858105458149*^9, 3.719859414509879*^9, 
   3.7198595151146955`*^9, {3.719859553334058*^9, 3.719859571423221*^9}, 
   3.719859620987361*^9, 3.719859661414578*^9, 3.719859745496543*^9, 
   3.719859803993367*^9, 3.71985985988174*^9, 3.7198599108437076`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SmIKDfZU/nmEvYlloNwrkwYjqlbCsX9fXxPVy6VB3a7ix9gmdorlfeU02MRt
FIFdpm91OaCZBlkF3Df+fy/Ls8yikwZlD/tt3K+v8EBEZoAGK+l0N55PTnjp
NT+G5j+XFopdwJVd+muGBjdN1G+MV6xcb0Z5gQY5TpVszOe2f61wzDINrn5O
foC9d37Q04meDT5Z3L4Rj2cpXvE1jGwwybZ5I14rzqRSDRY2eCvcbSOe2a18
wiycbHB5/zk/7K1Rrwwu8bBB1V2/7mBfO6zs2czLBh1beW9j7yrQL3krxAbJ
qn43sFOTLnsclGeDx4OiNvKBy47uWaoSGzSN8dzIF3f+kF/8qmzwppKOO7ZS
SKLgiAYbNKz75IL9zqOu+IE+G5TjarHDfrlHRaDSjg1ehi+MNuZvwuq3fAaN
x7zeALvbtmd4mxMb/M6wqoct4RuZHeDKBu8OKm/UT2Lx4gl4nQ2OfhdVw359
uCAmLYINftY149+oF7tjvLG/2OD1CypduH5LPBRulZSxwRSrC23Yg36M/XOV
bHB8z8tmbNk3mRnH6tlg/Pn1Wuy3wwLmbF1s0C/GrwD7nWfv49tLKH6mDS+x
P969zOWoyA7P66TYYY9qW/ve3c4Oi3STrOk26lN3+tUOdqiU+uzExv32m/50
7maHo/vuH8VOBmkxJ/XZ4dxrGx3sxMUJERNbdpiyKCK20e8uXlDa+Ygd3m/L
6trot5JmCcci2OHTkD9t2FtbtTg9otmhctN0M3bMQerUp2fs0CZe4zd2pMy7
DNl37PDVaF8BdljXgLZgITvk2DGQiB1o7mDEMMsO048uuGC/PNxqdXaBHabG
6jlt7A+G5q6/ltnhznsxZ7Cn9hx49ICeA45lHrbGtpKWb+Th5ICRZkyHsVXn
p+wl5Tng47uJO7APTbp4BShxQLd88+3YTiO9dwdVOOC/52yK2M86GpI/aHDA
97aPNvYjSkn2PzV9DrjuMrQVuz3G11vPjgOSNnfTYS+GLz9IOsMBl+pJ6xvf
kyFez1icOGBLhfQKtuGdc0SlKwcseXBvbuP3ZeeDTBY3OGATU+IIdpAmd/i5
aA5oa7anEfu12oNXJbEccG9mbT02oUTOkItH87l28Tf2rPhc479EDqjD870S
+zS1RehqKgfMfPepCHtn64u3gZUckJq5mIbNqeS08LmGA3q3S6Vij/ooHWiq
44DbAixTsBMlvvfKtnBA9kO1HzbG71IvUtbPAeWtON9gT+TEuk4NcUBfRfdE
7Ap2ux/8YxxQw67hJbZ/6thJl2kOaPk3IwF76QaDEROJEybeI55gD74+5xFL
xwm/t5rGYDdUlT5RYuCE2edHorBTRcMGLZg4oY2EcgT2+SLBgCQaJ9R7QwrF
bqbuyjfYygnfXy69i12s9mSwlZ8Tbvn5w38jntYrHJcEOSE/7ZsfdtjnApsn
IpxQ+0zuHWyDY4dXhqQ4oYwj1y1sydebjbi3ccKqR9Y3sEnzf59oKnBCzduE
N/a3WCf1B6qcsPdl6VXsiFGlgLSdnFD2hNsVbPe9s/V/NTjh42a5y9jGYd8l
yNqccNv4sie2bPcdDwXACY0cuz2wO++yc97U44SWQf/csWO2xX2sNELxUTzk
hm1afVxW0ZETmrTkuGDTLm96FezLCU2/GF3E9o4vvHPmPidUfn/GFXvol8dp
7TBOmFKVt3G/5aQY2BTNCT90n7i0ER/+WqHRZ5zQOlR5Yzw3P8uyWb7ghPXP
lb2w1XRvrxQmcsKb+/dsjP/lReW/ce854epTn435+hAhMUZZnNCfFrURH4vl
6bCkHE74n/nkzY3fV3advM9AcMK9pRY+2E3vpb2/F3NCnc97fbFVo/NOyddz
wu7xK/ew+y9OClPHOSHjXfWN9T4kYP66TJILvvz3NR279yPl76gMFzzHFfQV
+wbM4eSQ54L76a2/YX84K3HjmAoXnNlDl4PNmjJp2rqHCzbs2bPx+84v3Yek
fxZc8PmIfS22TaPOLs6TXNAtVKgOe8551kXVmgue9f2zUU/SoVaNVxy4YF+c
dtNG/jbLfVp344KOel3t2Dquv05x3eeC+RN2G/WZvp+mejWYC8oxr41u3L/1
KKUtlAsKdkX821ivopb05CguWPU1dXIjHlv/scFELmg4834e22hctfd1Ehe8
ZSSwiJ1bdDWb+p4LvlHyX9qoPzc6x8Yv6P2s+1Y38uvnJsI1D13fc4Ee95ee
2BNR9QVovH1vGLAt3OMvaBZzQdKpFjK2toDsVqZKLrg+oMi80a8uaXk8a+GC
AcX3qNjX9W8bMLRzQZZ7oTTsfwI/hZ27uOCh9NCN83d9sUm52iAXbPl4nQM7
QdBesmKWC4aEkng2nnc1wEhyhQv2XPTZhO1e+87jBj033DXfvxm7Sb76ST2F
G6qVq/Nhw4BpQoGDG7IHeGzBTu7kG/TfzA39XkVv9E8uLW2ONgFuOGmXxI/t
HXl6105xbpiW9EIAu3vc3zpElhsyGwcIbnwfJFa+37OTG8Zkcghj+53gXRrT
4YZuogdEsM3YbQ3iTbjhfQ0VUWzJwqQok1PccO7e7w2fXEg/zRnCDeHHug2H
KRbI/c7lhgGtX4SwjQKCRI5WcMNiXs+N9zF1mG6qaeaGv+e4N8ZzPaxntXKG
G273od+Yz66h91PG9DxwsugUL/aEjtdAOQcPtCtK2ojPuWlybakcD1yckOPC
ln5P/91OnQceHLy7Ed8+e9Lrxf08ELh0b8T/zO/la9useaBR62fWjfEHLdrn
O/NAKRtJlo3115k3PnGFB7byJW6sr/2XKdH7oTzw1OmqjfX/tHtxOfoZD6ym
s9jIj8X89YY373mgTPXMxv6ke5ApNSOLB563fb/x/RX2mxZS9IsHlh/7b2O/
aj3J41T3hwfS7zu9hi3Ts3V/dw8PlI6338hHDxdR4clJHvjj762N/Sx3Whrl
MQ/sKUvd+L31f/v3CBA=
          "]]}, Annotation[#, "Charting`Private`Tag$1366767#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{1.0204081632653061`*^-7, -0.0004930339333271695}, {
          0.0015335896027981336`, -4.388657277160615}, {
          0.0030670771647799406`, -8.089539613448178}, {
          0.0033933934058487736`, -8.751401272350423}}], 
         LineBox[CompressedData["
1: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
58Zu1iYBM6wnnp4mGBbXscjEKQn+B6Nkjis=
          "]]}, Annotation[#, "Charting`Private`Tag$1366767#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[{{0.022776911310878303`, -8.751401272350423}, {
          0.023002415470543436`, -1.631069028402718}, {0.02327728850651733, 
          5.252335241144854}}], 
         LineBox[{{0.00038771864101526355`, 5.252335241144854}, {
          0.0003938170290992691, -8.751401272350423}}]}, 
        Annotation[#, "Charting`Private`Tag$1366767#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"rads, rads/s, rads/s^2\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Motion of Second Digit\"", TraditionalForm], 
     PlotRange -> {{0., 4.999999897959183}, {-8.751401272350423, 
      5.252335241144854}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a1[t]\"", "\"a1'[t]\"", "\"a1''[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7198168144357357`*^9, 3.7198168453713923`*^9, {3.719816879064365*^9, 
   3.719816885463499*^9}, {3.71981691588974*^9, 3.7198169329623485`*^9}, {
   3.7198172256418767`*^9, 3.7198172655161376`*^9}, 3.719817311880705*^9, 
   3.719817659002096*^9, 3.719817832130289*^9, 3.71981790785709*^9, {
   3.7198180050564375`*^9, 3.7198180120319805`*^9}, 3.7198180440601544`*^9, {
   3.7198181043313413`*^9, 3.719818124964225*^9}, 3.719818238568182*^9, {
   3.719818342425624*^9, 3.7198183565946035`*^9}, 3.7198184265249577`*^9, 
   3.719818471478754*^9, 3.719818517285822*^9, 3.719818649431568*^9, {
   3.719818704948146*^9, 3.719818734260067*^9}, 3.7198187709405756`*^9, 
   3.719818892099652*^9, 3.7198189572588654`*^9, 3.7198190490197935`*^9, 
   3.7198191602093678`*^9, 3.7198195245278378`*^9, 3.7198196750419493`*^9, 
   3.7198197471877337`*^9, 3.7198197982514763`*^9, 3.7198198987095237`*^9, 
   3.7198200098840604`*^9, 3.719820043514459*^9, {3.7198201648580275`*^9, 
   3.719820171964919*^9}, 3.719820209240008*^9, 3.719820494689863*^9, {
   3.7198206110860376`*^9, 3.7198206414319053`*^9}, {3.719820676258611*^9, 
   3.719820710373522*^9}, 3.719820744982769*^9, 3.719820856534018*^9, 
   3.7198210154485016`*^9, 3.719821136981367*^9, 3.7198214232782283`*^9, 
   3.719821461339389*^9, 3.7198215324203434`*^9, 3.7198216260532827`*^9, 
   3.7198216699768934`*^9, 3.7198217237568564`*^9, 3.7198217720702934`*^9, 
   3.7198220566255903`*^9, 3.7198220900715*^9, 3.719822236528865*^9, {
   3.7198223226096563`*^9, 3.719822346867169*^9}, 3.7198224172895627`*^9, {
   3.719822488703871*^9, 3.719822517785368*^9}, 3.7198226401153593`*^9, 
   3.7198227508247547`*^9, 3.719824008053546*^9, 3.719824043673233*^9, 
   3.7198241086449475`*^9, 3.7198242150267572`*^9, 3.719824266478518*^9, {
   3.719824315788599*^9, 3.7198243496035185`*^9}, 3.7198467101657495`*^9, 
   3.7198467691030893`*^9, 3.7198468160214915`*^9, 3.7198470320569863`*^9, 
   3.7198555376967564`*^9, 3.719855582044532*^9, 3.7198556436552753`*^9, {
   3.719855701714614*^9, 3.719855730669586*^9}, 3.719855763694378*^9, 
   3.7198564198688383`*^9, 3.7198564670051403`*^9, 3.719856506358783*^9, {
   3.719856553281522*^9, 3.7198566070253553`*^9}, 3.719856780374275*^9, 
   3.7198580323528137`*^9, 3.719858105458149*^9, 3.719859414509879*^9, 
   3.7198595151146955`*^9, {3.719859553334058*^9, 3.719859571423221*^9}, 
   3.719859620987361*^9, 3.719859661414578*^9, 3.719859745496543*^9, 
   3.719859803993367*^9, 3.71985985988174*^9, 3.719859911750253*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
q17uk18ogOr+7+yxrTOLiwIo///+Hy2T3AY=
       "]]},
     Annotation[#, "Charting`Private`Tag$1366845#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Energy (J)\"", TraditionalForm]},
  AxesOrigin->{0, 2.2100000000000097`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Hamiltonian Plot (Non Frictional Energy)\"", TraditionalForm],
  PlotRange->{{0, 5}, {2.2100000000000097`, 3.274016000007322}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198168144357357`*^9, 3.7198168453713923`*^9, {3.719816879064365*^9, 
   3.719816885463499*^9}, {3.71981691588974*^9, 3.7198169329623485`*^9}, {
   3.7198172256418767`*^9, 3.7198172655161376`*^9}, 3.719817311880705*^9, 
   3.719817659002096*^9, 3.719817832130289*^9, 3.71981790785709*^9, {
   3.7198180050564375`*^9, 3.7198180120319805`*^9}, 3.7198180440601544`*^9, {
   3.7198181043313413`*^9, 3.719818124964225*^9}, 3.719818238568182*^9, {
   3.719818342425624*^9, 3.7198183565946035`*^9}, 3.7198184265249577`*^9, 
   3.719818471478754*^9, 3.719818517285822*^9, 3.719818649431568*^9, {
   3.719818704948146*^9, 3.719818734260067*^9}, 3.7198187709405756`*^9, 
   3.719818892099652*^9, 3.7198189572588654`*^9, 3.7198190490197935`*^9, 
   3.7198191602093678`*^9, 3.7198195245278378`*^9, 3.7198196750419493`*^9, 
   3.7198197471877337`*^9, 3.7198197982514763`*^9, 3.7198198987095237`*^9, 
   3.7198200098840604`*^9, 3.719820043514459*^9, {3.7198201648580275`*^9, 
   3.719820171964919*^9}, 3.719820209240008*^9, 3.719820494689863*^9, {
   3.7198206110860376`*^9, 3.7198206414319053`*^9}, {3.719820676258611*^9, 
   3.719820710373522*^9}, 3.719820744982769*^9, 3.719820856534018*^9, 
   3.7198210154485016`*^9, 3.719821136981367*^9, 3.7198214232782283`*^9, 
   3.719821461339389*^9, 3.7198215324203434`*^9, 3.7198216260532827`*^9, 
   3.7198216699768934`*^9, 3.7198217237568564`*^9, 3.7198217720702934`*^9, 
   3.7198220566255903`*^9, 3.7198220900715*^9, 3.719822236528865*^9, {
   3.7198223226096563`*^9, 3.719822346867169*^9}, 3.7198224172895627`*^9, {
   3.719822488703871*^9, 3.719822517785368*^9}, 3.7198226401153593`*^9, 
   3.7198227508247547`*^9, 3.719824008053546*^9, 3.719824043673233*^9, 
   3.7198241086449475`*^9, 3.7198242150267572`*^9, 3.719824266478518*^9, {
   3.719824315788599*^9, 3.7198243496035185`*^9}, 3.7198467101657495`*^9, 
   3.7198467691030893`*^9, 3.7198468160214915`*^9, 3.7198470320569863`*^9, 
   3.7198555376967564`*^9, 3.719855582044532*^9, 3.7198556436552753`*^9, {
   3.719855701714614*^9, 3.719855730669586*^9}, 3.719855763694378*^9, 
   3.7198564198688383`*^9, 3.7198564670051403`*^9, 3.719856506358783*^9, {
   3.719856553281522*^9, 3.7198566070253553`*^9}, 3.719856780374275*^9, 
   3.7198580323528137`*^9, 3.719858105458149*^9, 3.719859414509879*^9, 
   3.7198595151146955`*^9, {3.719859553334058*^9, 3.719859571423221*^9}, 
   3.719859620987361*^9, 3.719859661414578*^9, 3.719859745496543*^9, 
   3.719859803993367*^9, 3.71985985988174*^9, 3.7198599118944993`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
LxQk7v/PXyckZ5eWBIkX//P/AdJQsWQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$1366886#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Energy(J)\"", TraditionalForm]},
  AxesOrigin->{0, -3.274015999960493},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Lagrange Plot\"", TraditionalForm],
  PlotRange->{{0, 5}, {-3.274015999960493, -2.1965358658952945`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198168144357357`*^9, 3.7198168453713923`*^9, {3.719816879064365*^9, 
   3.719816885463499*^9}, {3.71981691588974*^9, 3.7198169329623485`*^9}, {
   3.7198172256418767`*^9, 3.7198172655161376`*^9}, 3.719817311880705*^9, 
   3.719817659002096*^9, 3.719817832130289*^9, 3.71981790785709*^9, {
   3.7198180050564375`*^9, 3.7198180120319805`*^9}, 3.7198180440601544`*^9, {
   3.7198181043313413`*^9, 3.719818124964225*^9}, 3.719818238568182*^9, {
   3.719818342425624*^9, 3.7198183565946035`*^9}, 3.7198184265249577`*^9, 
   3.719818471478754*^9, 3.719818517285822*^9, 3.719818649431568*^9, {
   3.719818704948146*^9, 3.719818734260067*^9}, 3.7198187709405756`*^9, 
   3.719818892099652*^9, 3.7198189572588654`*^9, 3.7198190490197935`*^9, 
   3.7198191602093678`*^9, 3.7198195245278378`*^9, 3.7198196750419493`*^9, 
   3.7198197471877337`*^9, 3.7198197982514763`*^9, 3.7198198987095237`*^9, 
   3.7198200098840604`*^9, 3.719820043514459*^9, {3.7198201648580275`*^9, 
   3.719820171964919*^9}, 3.719820209240008*^9, 3.719820494689863*^9, {
   3.7198206110860376`*^9, 3.7198206414319053`*^9}, {3.719820676258611*^9, 
   3.719820710373522*^9}, 3.719820744982769*^9, 3.719820856534018*^9, 
   3.7198210154485016`*^9, 3.719821136981367*^9, 3.7198214232782283`*^9, 
   3.719821461339389*^9, 3.7198215324203434`*^9, 3.7198216260532827`*^9, 
   3.7198216699768934`*^9, 3.7198217237568564`*^9, 3.7198217720702934`*^9, 
   3.7198220566255903`*^9, 3.7198220900715*^9, 3.719822236528865*^9, {
   3.7198223226096563`*^9, 3.719822346867169*^9}, 3.7198224172895627`*^9, {
   3.719822488703871*^9, 3.719822517785368*^9}, 3.7198226401153593`*^9, 
   3.7198227508247547`*^9, 3.719824008053546*^9, 3.719824043673233*^9, 
   3.7198241086449475`*^9, 3.7198242150267572`*^9, 3.719824266478518*^9, {
   3.719824315788599*^9, 3.7198243496035185`*^9}, 3.7198467101657495`*^9, 
   3.7198467691030893`*^9, 3.7198468160214915`*^9, 3.7198470320569863`*^9, 
   3.7198555376967564`*^9, 3.719855582044532*^9, 3.7198556436552753`*^9, {
   3.719855701714614*^9, 3.719855730669586*^9}, 3.719855763694378*^9, 
   3.7198564198688383`*^9, 3.7198564670051403`*^9, 3.719856506358783*^9, {
   3.719856553281522*^9, 3.7198566070253553`*^9}, 3.719856780374275*^9, 
   3.7198580323528137`*^9, 3.719858105458149*^9, 3.719859414509879*^9, 
   3.7198595151146955`*^9, {3.719859553334058*^9, 3.719859571423221*^9}, 
   3.719859620987361*^9, 3.719859661414578*^9, 3.719859745496543*^9, 
   3.719859803993367*^9, 3.71985985988174*^9, 3.7198599120577784`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
PPd9/InokjGQijfcQGw3nGwUJDEGTmFVqaQeRjkDUo/IjkGul2Z/L/ZVCftl
gmvH4EZj+lLi2zrrGny3jUHLxHE9Um9PXr40uW8wBrH593XbsUUz3L/uPT4G
fyV4t5J6Da88Lcl5Zgz4Z+dFWkk+z4q3ul8cAw591jdS72lHA81v3B+Djqvx
H0m/NPHeuWCXhd9fzNIrI3m40rxEMX8MkAkzvwS7a7uGYn/JGPANuG8vJvV/
bnbQsmEM6io28RVgU7OdHc+OjcEaw0D3bFLvTuddDNf+g4Bct5Rkkoc7Wo5E
Kv8DrXHtRR+wN1OObejb+g8kw5aavcfe7a3TfWvPP3A+Z8CTQOo/RtHwrck/
MO27tYfc38G1oxtofv9gcbp/YAg255ZbPe+Z/8CEp/ChK/Yi1sT36al/UGy3
upvkoWCOQ4QWZRxuTXjvuUb6V8/MqHHROCjKVnOQ+1TtnFYu1+pxeG+d+pLk
s1MQb+SpY+NQ40Q5Z07u35Ne12NNx+FidW/fWZKfMrNGTItx4BFZ5nSG9Gvi
0KIHjuNwPNjd/xR2Qn7V9ZSH47DrphDzKLnP/oUY834dBwGOd9Z62C80Nl1u
zh0H89dqS3SxT/uU+70vHgd15tX0/di/V3EWHakfh6jLyyS0sauOXNoZzhwH
Wc4fy/eQfotcfMxuehxqdz3q1iB51R/rhKgTsMFP+TMi/e/RktjJNwHPNddY
qmNnfdCVXr92AhZ/EaftwHad7VGbV56AZXcU/m3HVtXxPF61bQLOsmQGt2Gn
tKY/dtaaAJuJuv4tpP+WyHNmnZmAPf+EV6lgW538LuNvOQF6FGP1jaRf35xS
N7ObAINi+1PKpJ/VA69yuU7AtxTReCXS/xepffohE/C58KnrOnLfp4dzyUTg
+fLPZq4l58O5XZYZg+fDzUUj9g23MwlJngDbP71PFUj+lDSWt5RNwG/5uXk5
Uh/LrvZ/qJ0AYfdwC+J5M0Eer0Y8/8rgslXY16e1NRT+4vftd0qQxXZYk/rR
gWMSlNxCwmVIfjgfrtzNOwkfNJtWEvdnDwwIC05CQLJ0ojT2+WOyq9OlJqFx
y5UyKexVMVm7H62ehBNPL5oTtw8fP31q/ST0bto4K4l96p5/KHXnJKyz69lJ
vLxm3acajUmw7sxqXUHyQbKg6pX2JITsVnxAbJg6u3C/8SRspwd0SpD1057K
S5yaBC0t2xDiCr3NmkPmk6Co8kqPeH/XhZuPHSehOHM8V5zcbzdlEzRdJmFF
r8gd4t1Lm36Pu00Ct5y6DvEOLb3tJ70nwQNd+L0ce2szp+XiJ5PAtePIG2IV
56ygb08n4fJt3qvEa19tYMq+mQTetg+SxKt39crUJU5CUK/nuBj2yp9Rh+6n
TEL08sFKYsmLx2/t+DIJMjYticTLOQXfDeRMwtUKXR9ikefFTRGFk1AI8vbE
gls8eQ9XTML5tDNHiPnKdu6g103C4p39qsS858asPjVNglh52kpintmEEMuO
SXjk+mUxMUfQuR9ifZPwxaRrWpTcT+sl/5UwJkH8sUIf8UxenazbxCSY619t
JJ408TNQnpuE5OrccuKxsX3u7RxTEO1AySNmeFOSAnmnwOKR1BfigVXpf/YK
TkFlqFAKcW+m4+Ip0SlwXFnxjrjTcK3aW6kp8P6h+Za4daD9wqnVUyCjahlH
3OT17OmS9VPQq7mG7XoJw8KcTVNgUnoznrg2ZdHE5R1TsLL0aCJxpW6+3GqN
KQg/Gf+BuLTzpmH9vimwSbD6TFzoutXzof4UGC+6m0WcJzz8Qc1oCtb1/PtB
nJ3wpnXo5BQEFb6tJM7UPLMk2mwKOk49Y68/rUlU/Yj1FIjYp/UQpzhV2XI6
TEFL1/gYcULM7mLrm1NgaxMrSPY3Vo01Ke41BaVUDlnimNqP8uUPp+DRIoPN
xOEccndUQqdg01zIcWIfC27ESp4C16wg9vk/nPlml5g+BTPb9fOI7wa6PD+d
PQW52180Ervl/Z3OLZuCqE1jvKS+7FaVfvLunQJYoXSJWL/Tf52k5DTwfmHq
kvotXddZa7JqGk56i1kSH7i8ze3Z2mmI4T3gTqxN+1Mpum0aQrjSP7HrX3rd
FaFD07BFW1qS9MsWk/xsHo9p4DNy6yVOeSl6Yd/9aXhlU00h/afSbyN013ca
HjFbRYmVrguepz+bBlm/FdrECqGneec+ToOl87sXxK9bklPUMqZBW94ujVhO
nsv0RvY0KDFKyohXpiYkTZZOw60SowliidopI2bXNFzae1SL5EGYuN78xoFp
WBaVcZRYzDwq1mF0Gs4cfWNNLDK6lzU4Nw3frwh7EweqhsUocrJAd0VAOLGQ
+6CeDS8Lvnr4JRDz8wdG9S5jwUUx3hJi36M9OvKSLCjTutNAvDhyB/PcKhbY
rr7RQ7xQqU2rQ5kFbd21VJJf9503D8tsY8GJyK18xFxf74We2cWC9MQly4np
ukr9zTos8PJZpUzs8cQ9UOIQC573m+4gpjTW7jppzIIlaYs1id1WKvQ8NWGB
krmyHvGM9Q3/ejMWrHf+YUR8/UO56jJrFiS9qThFPDUp02Fkz4KG0gPniF2Q
s3egMws683fYEo/fK9xSc4MFnz3CLxE7VYi3CHiw4BzV0YWYKWJ//9B9FhTr
pd0kvmT6faOfLwsk3C95EDNeLW0sC2SBS0nkXWK7QSuvRc9YcMYHPSQe3Jy5
/kA0C45LG/kQ27ou+fXgDQs0R5r9iPtyzW4XJrIg2LMxgNjQVN/I8AsLluof
DiTOmlRd21rIAqkODbaZ+e+FX1ew4N2l/U+IFZ7IzdvUscChJIX9/VNnnv3d
2MyCPBsP9viP1wvUTnSwwPRNijdxwfTdrK99LAiJ0n3A3r+CmVjPERa8enfg
DvHGoEtPdCZZsMHs423i82a9N5fM4/P2unOD+NkGU6ufnDOQ0ZvrTFw5U2Pw
bNEMWAo52BPvDPkmL798BhKcRM8SO1hsERyUngEjV9HjxK83vp1Jlp8B4zaf
Q8T8pcFV6ltmwMqhdRex1tNFmRxqM8BzP2cT+zzPe7wu3j0DhlzSa4g7KXY3
jA/NgEenhSCxWHnHOYmjM5A1p89FrP/s+KH2UzNwbUf6FKnHtC1acnY2M+Bz
QKqF2PuCRMWduzNw/1xeDHHOtsfpB3xmIPyBcBDxOAdPjEDgDDSqL7xDfCaS
6fI8egZcf/42J95cW7zyU+YMlC2blCBu3nXtSufoDNTbi98m/SjIO3wmfmoG
qPcO2BBr11sccKDMwvd7u42Jky8dkp5ZPAvasZfWEd99I18stGYWpOBmDckP
JYG6FXtOz0LdARUJ4m6fbo+gc7OgtvIoF/HzhRM9PTazEKhvzyB5tIhDNNnb
ZRYqnS3ziPvGj++tC5iFXe/rbIhfNTXbWefNwsp0pQySfxKxXd/81sxB+HHa
GZKXtavGV7VvmAPpA+sOED+K5nq4eescXJm4vJV4OkzesGH3HHh1W7Hvx3of
696VJnNgUz2VSfL9yeVB/lTfOdh/0k+WeD9j1pknaA4CE1YJENMu8jWeeDYH
I3975paReji/4dX8mznYJsf6Tax/3FFVJ2cOei5bBBEvhH9nm5hz8FrztRCx
i4YCT+r0HJSVCdGJu/ecfOdHnYfEr99HRbC/a+dM714yD63mv6qJrxv4PIlb
Ow92YrNBxL2G2aqeG+eh7a/5PWLjo8wWk+3zYPVw0TViFZPjivx756FbQ/IU
cf85ufwrZ+fh+de9CsQnrI7ZHLLC79v9QZy48MIjgbX28xAzcmIJcYz9yKlm
13nYIWkzsRTb5NrX8T2h85DrfL+YuPgGI3xF5Dwolg58I97uJrtn4tU87BP2
/UQs7PnAL/7jPBTfuB9NXOptpCBQMQ+3Nhi7Eu/wu1/e93MeNtVEXCaODfji
lNc0D/QhGRtir2CZnKt98yA9+PME8WiooeXhkXl4uILrCPGZZ/cWr5uchwo5
+wPEkpXjisM0CuKz+qtGbHSYn2LCRUE++6e2EHtXr6kpXEBB0aawgXi61uTa
C34K0pmzWUlc1/A930iSgjybt/ESLz7ZFPpdBvvKX05izaZ/NhvkKMhLr5RC
nPxHQXCBIgUJTaycEMb+e3p3l/MGCrqtGjRKLN12Mq1dhYIsTbcOEft2+Jpm
qlLQYBWlmzjfInbjml0UZPFboZ14piuHIxhR0Kly1z/EF3rH4u33UdBxSswv
4mhrPrem/RTkqnyllri+T/6wjj4FSUo7VhHvGzwxsdKIgvIuNZcQRwh71tw6
RkF16seLiMd2vn3fdBKPf2DqB/F+85pHqqcpiPI3M4846iHLMtiMgsYtXn4n
Hv8gq8k8h9ezICGbWK/hgPQhawpykazLIp6WD69f4EBBf5IefSE+dDAv5fxl
CrL+vDSD+PWVAf/cKxRUoJGVxl7fc+GL0tcp6Lqv12fiI/lqOjdv4vk1WaYS
xw9YyP2+TUELfCw/EVOEfajbvCjIb8Ijhdh456fmJ/coKMQ2/SNxgllzOuMh
BTluXci26XPJZ79e4fOKHEoi5q8/7ZqVTUFqyr/Zn2euTtrsUoDHN9jGHt/a
mTK4sZyCtI+VsN+fHa5Q5FtFQemWsez5ieQdetVfS0HnTgew5/9dMPrUq0YK
SsrzYq9PdEeRKq0F77eUL3v9dmdHlp5upyDZXdGZxOJJGuWifynot1s7e7+c
9NrVvccpqNEiJ5e42Gmh+N8pCnLSXZDPrpdwlQmtWQpqTTVmn09Zn8f7eToV
/TClsM9v9X1Z6csC+P80OY9y9vl/t6CeUKSiN3ZNDcQMjd/Lb27AzxdsaCTm
zjm4OUoF3ys7PJqIt37bYdm9HffJTtkW4sAv/GWXtKgo6IZeJ3s/d9ztDtLG
7gvoIs5NZ82nHaAi91s17Hod/dytMn8Y/9+2T+8v8cGUzNBHpvie2reUXd/n
N6kkvzuLfze2qA0TuyW/KamyoKIN1acZ7PGTHs8ts8G5NBbM7o+FiVYWMVep
KGNLwTjxSsU/NwuuU9HnqHx2P6m+PRLSdxM/dyxrktgqTr1Y2YuKdDZHTBP/
eCWs/NWfim7dFJ4j/rPqoU7rEyqqkW5n+9/LeTN6CBXZKMXNE6960Rek8xz3
nZwslfTvkaifhX4vcW63udOIPSKyWT/j8L3Fl08n/hD+VkkiCff12QEO4taw
4LNmqVT0MniCnQdLnroHxmbiddl2cxGrh9gWDH2nouo3adzsfPETfcLdhOv2
W+sC4k/380yl/+E+jdNYSHzbv2XvFxoNhSZ+ZX+uGzqtZMxPQ6dZmTzEKhI8
L2WX0ZBH/hK2l0UtXTaygobgnRZ7/BlZ2UdZq2hI4Mpp9vvb3yjPP1pHQ5/q
T7HnV7hO/fJxFRpiPNZgzz/x/YGe1ao0pPOKl70+l8/nK3L20tDeaGN2ntlc
u/hAYT8Nfa0PY++X6U6nPX56NLTNo4G9n3u+uX82MaShnti9s8R8BeGRE2fx
580dU8TUBy+Pm56jIZVN8+zzGtsfL5RvRUPZdBG2G8o/33tsT0Mhz7ayzzum
rtp+/U0airTcx66HHd08yDyUhu5eyWfX13lO59bychpa90KSnX/LpYp+sapo
iIMy/5O4fPuKCoWfNNRIbWHn4Vbb/K8ejXj8QxHVxFw1S59t7aWhJT4S7H55
FZVqFEGlIwWPNex+O5axUK+Eg44EEB87/xbVmmpOctNRyiiTnX9O3NybDPjo
aPWt7+z807Q7ys8lTkfW/Hbs/u7cOVl8cTMdufgvYudTqJHu97BtdNQjysPO
G137qPSCHXRkm8WZTJzyQjtWRoOOHn3mYueT14Knd37q0RGlWCaBXZ+/VNEu
Szral5MXw+5vhs+2Cxfo6M2RzpfE3gvblUIu0tFYABfbY7serhi5TEd6HYei
ifNifk/H3KYjrQvcEcTml258WhRGR0sjR0LY/TaKUvdG0dGUgV8wcZIj1+fb
r+nI4OK2IHY+OwSkjSXTUd7314+JXzCM05XS6ehemH0AsY6DRIbVNzrifLTb
nzjY/s2XphI6cv/C7UusNmybKVJNR801097EHXYqXw/V09E4a+IRsbLd16y8
TjqS2SPwkLhu0OPbXB8d2Tuuf0DselE7e/sInp/7kfvERbY1OQmzdPRh+9e7
7Dy2Nc2VXsiB1g7q3SE2s/mbFyjCgeYy6F7E7y84/eCR5UCj6s0e7PVYzxe4
buBArjkN7uz5Wi0tsdDmQN03VG4Tb7BcV657lgMJSFFvEc9nvh04U8aBHrC+
3SSuEFTkdVblRKlpb9mf5585WnMoghM9nr3NHu/LO49ninQudJtrBft94sfq
nF0duJCchhb78xvUtYdKm7nQK/fb7O9LblcvdxLiRvu6Hrmx7xM7A90VOtzI
qDOG/b7zr84X57txI7vuBlf2eTVd17ZL4UaNVzex7aKhP3RXlAc9Vj9/g7jr
tUxgpCsPcl3Pz3am5Qpdxb886KYDD9uBCmIc6UYL0ApdWbYft307t/jLAjSx
T5Vt/7DzBWelFyLLfepsOy9r3//ZcyEaKVBh+0TgqfJFPQtRRe8KtuNsqRZ1
Brxo7AMn25Oar6Yis3iRSv7odfb9t3Rs+0bZRWhkXS/bHV27Xb7fW4TikzrY
/i6QUVQwtghJqf/nF7s2ipedXYzuhHayHXv2iEhYwWI0lNrFduIdZwHL9XzI
dfI/h120VdoSwIfizP/zPSPzA/R/fPh38H/f/xPqcV3r7BL0R/y/8bc0Rcfd
K1uCFsm3s93AuzVHW4wfcUS2sR265lli2QF+tP38f17kLPzS24MfHTr7n29l
+4QeSOdH9Mv/ufviiCTvMD/KdP/PeuJGr4pXCaCfnv+5QNOXMmQsgIav/2cN
u4KTAg8E0A3b/+yQL5xt900ATZn850gJs1Wl/wSQx+H/3D7sdcpHQRBZH/jP
q3LfBOufFESLdP7zicmUM/w+gojyP/uv/762OksQVf7PN/w7ZsvGBFHg/v98
nslRVbRWCH36ny2qWS5rTgkhzf/Z7MOo9AM/IeT3/+NVL/LJKxBC2dr/OYu5
emp+Xggp/M//B3obwuI=
       "]]},
     Annotation[#, "Charting`Private`Tag$1366927#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Energy (J)\"", TraditionalForm]},
  AxesOrigin->{0, 2.210000000000054},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Total System Energy\"", TraditionalForm],
  PlotRange->{{0, 5}, {2.210000000000054, 8.752102982149935}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7198168144357357`*^9, 3.7198168453713923`*^9, {3.719816879064365*^9, 
   3.719816885463499*^9}, {3.71981691588974*^9, 3.7198169329623485`*^9}, {
   3.7198172256418767`*^9, 3.7198172655161376`*^9}, 3.719817311880705*^9, 
   3.719817659002096*^9, 3.719817832130289*^9, 3.71981790785709*^9, {
   3.7198180050564375`*^9, 3.7198180120319805`*^9}, 3.7198180440601544`*^9, {
   3.7198181043313413`*^9, 3.719818124964225*^9}, 3.719818238568182*^9, {
   3.719818342425624*^9, 3.7198183565946035`*^9}, 3.7198184265249577`*^9, 
   3.719818471478754*^9, 3.719818517285822*^9, 3.719818649431568*^9, {
   3.719818704948146*^9, 3.719818734260067*^9}, 3.7198187709405756`*^9, 
   3.719818892099652*^9, 3.7198189572588654`*^9, 3.7198190490197935`*^9, 
   3.7198191602093678`*^9, 3.7198195245278378`*^9, 3.7198196750419493`*^9, 
   3.7198197471877337`*^9, 3.7198197982514763`*^9, 3.7198198987095237`*^9, 
   3.7198200098840604`*^9, 3.719820043514459*^9, {3.7198201648580275`*^9, 
   3.719820171964919*^9}, 3.719820209240008*^9, 3.719820494689863*^9, {
   3.7198206110860376`*^9, 3.7198206414319053`*^9}, {3.719820676258611*^9, 
   3.719820710373522*^9}, 3.719820744982769*^9, 3.719820856534018*^9, 
   3.7198210154485016`*^9, 3.719821136981367*^9, 3.7198214232782283`*^9, 
   3.719821461339389*^9, 3.7198215324203434`*^9, 3.7198216260532827`*^9, 
   3.7198216699768934`*^9, 3.7198217237568564`*^9, 3.7198217720702934`*^9, 
   3.7198220566255903`*^9, 3.7198220900715*^9, 3.719822236528865*^9, {
   3.7198223226096563`*^9, 3.719822346867169*^9}, 3.7198224172895627`*^9, {
   3.719822488703871*^9, 3.719822517785368*^9}, 3.7198226401153593`*^9, 
   3.7198227508247547`*^9, 3.719824008053546*^9, 3.719824043673233*^9, 
   3.7198241086449475`*^9, 3.7198242150267572`*^9, 3.719824266478518*^9, {
   3.719824315788599*^9, 3.7198243496035185`*^9}, 3.7198467101657495`*^9, 
   3.7198467691030893`*^9, 3.7198468160214915`*^9, 3.7198470320569863`*^9, 
   3.7198555376967564`*^9, 3.719855582044532*^9, 3.7198556436552753`*^9, {
   3.719855701714614*^9, 3.719855730669586*^9}, 3.719855763694378*^9, 
   3.7198564198688383`*^9, 3.7198564670051403`*^9, 3.719856506358783*^9, {
   3.719856553281522*^9, 3.7198566070253553`*^9}, 3.719856780374275*^9, 
   3.7198580323528137`*^9, 3.719858105458149*^9, 3.719859414509879*^9, 
   3.7198595151146955`*^9, {3.719859553334058*^9, 3.719859571423221*^9}, 
   3.719859620987361*^9, 3.719859661414578*^9, 3.719859745496543*^9, 
   3.719859803993367*^9, 3.71985985988174*^9, 3.7198599122460995`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.", 
       RowBox[{"s", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".15"}], ",", ".15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".15"}], ",", ".15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], ",", 
          RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.", 
       RowBox[{"s", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "soltime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".15"}], ",", ".15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".15"}], ",", ".15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\""}], "}"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.719794683517084*^9, 3.7197946893301854`*^9}, {
  3.719820552350518*^9, 3.719820570956131*^9}, {3.7198222615393133`*^9, 
  3.7198222748567142`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "/.", "parameters"}], "/.", 
    "finsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "t0"}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7198238223348513`*^9, 3.719823844890847*^9}, {
  3.719824024535392*^9, 3.7198240296158657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tailLen", " ", "=", " ", ".2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.",
           "s"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "t0"}], "}"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", " ", ".1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Orange", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.",
           "s"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"t0", "-", "tailLen"}], ",", "0"}], "]"}], ",", "t0"}], 
         "}"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", " ", ".1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x1", "[", "t", "]"}], ",", 
             RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.",
           "s"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "t0"}], "}"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", " ", ".1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x1", "[", "t", "]"}], ",", 
             RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", "parameters"}], "/.",
           "s"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"t0", "-", "tailLen"}], ",", "0"}], "]"}], ",", "t0"}], 
         "}"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", " ", ".1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", 
         RowBox[{"Line", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x1", "[", "t", "]"}], ",", 
                  RowBox[{"y1", "[", "t", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "[", "t", "]"}], ",", 
                  RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "}"}], "/.", 
              "parameters"}], "/.", "finsol"}], "/.", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "t0"}], "}"}]}], "]"}], "]"}]}], "}"}], 
       "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t0", ",", " ", "0", " ", ",", "soltime"}], "}"}], ",", " ", 
   RowBox[{"AnimationRate", "->", ".1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.719817757308429*^9, 3.719817787043434*^9}, {
  3.7198188317462435`*^9, 3.7198188511287394`*^9}, {3.719819595580716*^9, 
  3.719819609445573*^9}, {3.719822686682276*^9, 3.7198227140801067`*^9}, {
  3.7198227962866073`*^9, 3.71982282280009*^9}, {3.7198228565016766`*^9, 
  3.719822933970651*^9}, {3.7198230048891354`*^9, 3.7198231703359423`*^9}, {
  3.719823202416221*^9, 3.719823208266773*^9}, {3.7198233331186204`*^9, 
  3.719823345306014*^9}, {3.7198233809717937`*^9, 3.7198234358576965`*^9}, {
  3.7198234971336503`*^9, 3.719823568500397*^9}, {3.719823773024804*^9, 
  3.719823776878011*^9}, {3.719823855299481*^9, 3.719823907254628*^9}, {
  3.719856478097627*^9, 3.7198564823399377`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t0$$ = 1.4498742103576658`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t0$$], 0, 5}}, Typeset`size$$ = {500., {246., 251.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t0$1368492$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t0$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t0$$, $CellContext`t0$1368492$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ParametricPlot[
          Evaluate[
           ReplaceAll[
            ReplaceAll[{
              $CellContext`x[$CellContext`t], 
              $CellContext`y[$CellContext`t]}, $CellContext`parameters], \
$CellContext`s]], {$CellContext`t, 0, $CellContext`t0$$}, 
          AxesOrigin -> {0, 0}, PlotRange -> {{-0.1, 0.1}, {-0.1, 0.1}}, 
          AspectRatio -> 1, ImageSize -> 500, PlotStyle -> {Orange}, 
          AxesLabel -> {"X", "Y"}], 
         ParametricPlot[
          Evaluate[
           ReplaceAll[
            ReplaceAll[{
              $CellContext`x[$CellContext`t], 
              $CellContext`y[$CellContext`t]}, $CellContext`parameters], \
$CellContext`s]], {$CellContext`t, 
           
           Max[$CellContext`t0$$ - $CellContext`tailLen, 
            0], $CellContext`t0$$}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{-0.1, 0.1}, {-0.1, 0.1}}, AspectRatio -> 1, 
          ImageSize -> 500, PlotStyle -> {Red, Thick}, 
          AxesLabel -> {"X", "Y"}], 
         ParametricPlot[
          Evaluate[
           ReplaceAll[
            ReplaceAll[{
              $CellContext`x1[$CellContext`t], 
              $CellContext`y1[$CellContext`t]}, $CellContext`parameters], \
$CellContext`s]], {$CellContext`t, 0, $CellContext`t0$$}, 
          AxesOrigin -> {0, 0}, PlotRange -> {{-0.1, 0.1}, {-0.1, 0.1}}, 
          AspectRatio -> 1, ImageSize -> 500, PlotStyle -> {Blue}, 
          AxesLabel -> {"X", "Y"}], 
         ParametricPlot[
          Evaluate[
           ReplaceAll[
            ReplaceAll[{
              $CellContext`x1[$CellContext`t], 
              $CellContext`y1[$CellContext`t]}, $CellContext`parameters], \
$CellContext`s]], {$CellContext`t, 
           
           Max[$CellContext`t0$$ - $CellContext`tailLen, 
            0], $CellContext`t0$$}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{-0.1, 0.1}, {-0.1, 0.1}}, AspectRatio -> 1, 
          ImageSize -> 500, PlotStyle -> {Red, Thick}, 
          AxesLabel -> {"X", "Y"}], 
         Graphics[{Thick, 
           Line[
            Evaluate[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[{{0, 0}, {
                  $CellContext`x1[$CellContext`t], 
                  $CellContext`y1[$CellContext`t]}, {
                  $CellContext`x[$CellContext`t], 
                  $CellContext`y[$CellContext`t]}}, $CellContext`parameters], \
$CellContext`finsol], {$CellContext`t -> $CellContext`t0$$}]]]}]}], 
      "Specifications" :> {{$CellContext`t0$$, 0, 5, AnimationRate -> 0.1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{551., {285., 291.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7198234294466524`*^9, {3.7198234849733562`*^9, 3.7198235556020727`*^9}, 
   3.719823777522727*^9, {3.719823856521761*^9, 3.7198239078592*^9}, 
   3.719824017207881*^9, 3.719824058563817*^9, 3.7198241140703764`*^9, 
   3.7198242277636003`*^9, 3.7198242846207466`*^9, 3.7198243225104685`*^9, 
   3.719824354438342*^9, 3.719846711465196*^9, 3.7198467811149163`*^9, 
   3.719846821376694*^9, 3.719847035806529*^9, 3.7198555385991898`*^9, 
   3.719855587099934*^9, 3.719855657295535*^9, 3.7198557044649615`*^9, 
   3.719855746309161*^9, 3.7198564340846553`*^9, {3.719856472515822*^9, 
   3.7198564827339525`*^9}, 3.7198565257393074`*^9, {3.7198565615093603`*^9, 
   3.7198565834807673`*^9}, 3.7198566309750237`*^9, 3.7198567848311367`*^9, 
   3.719858037906578*^9, 3.7198581097936754`*^9, 3.719859683713111*^9, 
   3.71985981359275*^9, 3.7198598720464993`*^9, 3.7198599163050256`*^9}]
}, Open  ]]
},
WindowSize->{1264, 661},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2733, 65, 126, "Input"],
Cell[CellGroupData[{
Cell[3316, 89, 1145, 31, 30, "Input"],
Cell[4464, 122, 2420, 56, 45, "Output"]
}, Open  ]],
Cell[6899, 181, 2263, 48, 107, "Input"],
Cell[CellGroupData[{
Cell[9187, 233, 4805, 121, 88, "Input"],
Cell[13995, 356, 1374, 39, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15406, 400, 696, 21, 30, "Input"],
Cell[16105, 423, 719, 20, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16861, 448, 892, 15, 69, "Input"],
Cell[17756, 465, 3962, 97, 102, "Output"],
Cell[21721, 564, 3938, 96, 79, "Output"],
Cell[25662, 662, 4364, 110, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30063, 777, 1501, 42, 50, "Input"],
Cell[31567, 821, 4533, 104, 99, "Output"],
Cell[36103, 927, 4637, 107, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40777, 1039, 1301, 31, 50, "Input"],
Cell[42081, 1072, 27273, 609, 632, "Output"]
}, Open  ]],
Cell[69369, 1684, 261, 5, 30, "Input"],
Cell[69633, 1691, 3555, 73, 563, "Input"],
Cell[73191, 1766, 5655, 156, 183, "Input"],
Cell[CellGroupData[{
Cell[78871, 1926, 3589, 97, 183, "Input"],
Cell[82463, 2025, 92952, 1589, 220, "Output"],
Cell[175418, 3616, 91827, 1568, 220, "Output"],
Cell[267248, 5186, 17079, 288, 239, "Output"],
Cell[284330, 5476, 18813, 316, 239, "Output"],
Cell[303146, 5794, 19901, 334, 239, "Output"]
}, Open  ]],
Cell[323062, 6131, 2125, 61, 71, "Input"],
Cell[325190, 6194, 590, 18, 30, "Input"],
Cell[CellGroupData[{
Cell[325805, 6216, 7200, 182, 259, "Input"],
Cell[333008, 6400, 5232, 107, 593, "Output"]
}, Open  ]]
}
]
*)

